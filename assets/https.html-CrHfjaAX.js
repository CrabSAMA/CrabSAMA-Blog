import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as t,o,i as c}from"./app-Bq47Z06L.js";const i={},r=c('<h2 id="http-vs-https" tabindex="-1"><a class="header-anchor" href="#http-vs-https"><span><code>HTTP</code> VS <code>HTTPS</code></span></a></h2><p><code>HTTP</code>特点：</p><ol><li>无状态：协议对客户端没有状态存储，对事物处理没有“记忆”能力，比如访问一个网站需要反复进行登录操作</li><li>无连接：<code>HTTP/1.1</code>之前，由于无状态特点，每次请求需要通过 <code>TCP</code> 三次握手四次挥手，和服务器重新建立连接</li><li>基于请求和响应：基本的特性，由客户端发起请求，服务端响应</li><li>通信使用明文，请求和响应不会对通信方进行确认、无法保证数据的完整性</li></ol><p><strong>针对无状态的一些解决策略：</strong></p><ol><li>通过 <code>Cookie</code> / <code>Session</code> 技术</li><li><code>HTTP/1.1</code>持续连接（<code>HTTP keep-alive</code>）方法，只要任意一端没有明确提出断开连接，则保持 <code>TCP</code> 连接状态</li></ol><p><code>HTTP</code> 有以下安全性问题：</p><ul><li>使用明文进行通信，内容可能会被窃听；</li><li>不验证通信方的身份，通信方的身份有可能遭遇伪装；</li><li>无法证明报文的完整性，报文有可能遭篡改。</li></ul><p><code>HTTPS</code>特点：</p><p>基于 <code>HTTP</code> 协议，通过 <code>SSL</code> 或 <code>TLS</code> 提供加密处理数据、验证对方身份以及数据完整性保护。</p><ol><li><p>内容加密：采用混合加密技术，中间者无法直接查看明文内容</p><p>混合加密是结合非对称加密和对称加密技术。客户端使用<strong>对称加密生成密钥</strong>对<strong>传输数据</strong>进行加密，然后使用<strong>非对称加密的公钥</strong>再对<strong>密钥</strong>进行加密。即使被黑客截取，由于没有私钥，无法获取到加密明文的秘钥，便无法获取明文数据。</p></li><li><p>验证身份：通过证书认证客户端访问的是自己的服务器</p></li><li><p>保护数据完整性：防止传输的内容被中间人冒充或者篡改</p></li><li><ol><li>收方能够证实发送方的真实身份</li><li>发送方事后不能否认所发送过的报文</li><li>收方或非法者不能伪造、篡改报文</li></ol></li></ol><p>非对称加密过程需要用到公钥进行加密，<strong>公钥</strong>就被包含在<strong>数字证书</strong>中，数字证书通常来说是由受信任的数字证书颁发机构 <code>CA</code>，在验证服务器身份后颁发。证书中包含了一个密钥对（公钥和私钥）和所有者识别信息。</p><p><code>HTTPS</code> 并不是新协议，而是<strong>让 <code>HTTP</code> 先和 <code>SSL</code>（<code>Secure Sockets Layer</code>）通信</strong>，再由 <code>SSL</code> 和 <code>TCP</code> 通信，也就是说 <code>HTTPS</code> 使用了<strong>隧道</strong>进行通信。</p><p>通过使用 <code>SSL</code>，<code>HTTPS</code> 具有了<strong>加密</strong>（防窃听）、<strong>认证</strong>（防伪装）和<strong>完整性保护</strong>（防篡改）。</p>',13),l=[r];function d(n,p){return o(),t("div",null,l)}const s=e(i,[["render",d],["__file","https.html.vue"]]),g=JSON.parse('{"path":"/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/https.html","title":"HTTPS","lang":"zh-CN","frontmatter":{"title":"HTTPS","date":"2022-05-27T09:56:27.000Z","category":["学习笔记"],"tag":["HTTP"],"description":"HTTP VS HTTPS HTTP特点： 无状态：协议对客户端没有状态存储，对事物处理没有“记忆”能力，比如访问一个网站需要反复进行登录操作 无连接：HTTP/1.1之前，由于无状态特点，每次请求需要通过 TCP 三次握手四次挥手，和服务器重新建立连接 基于请求和响应：基本的特性，由客户端发起请求，服务端响应 通信使用明文，请求和响应不会对通信方进行...","head":[["meta",{"property":"og:url","content":"https://crabsama.github.io/CrabSAMA-Blog/CrabSAMA-Blog/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/https.html"}],["meta",{"property":"og:site_name","content":"CrabSAMA · 笔记"}],["meta",{"property":"og:title","content":"HTTPS"}],["meta",{"property":"og:description","content":"HTTP VS HTTPS HTTP特点： 无状态：协议对客户端没有状态存储，对事物处理没有“记忆”能力，比如访问一个网站需要反复进行登录操作 无连接：HTTP/1.1之前，由于无状态特点，每次请求需要通过 TCP 三次握手四次挥手，和服务器重新建立连接 基于请求和响应：基本的特性，由客户端发起请求，服务端响应 通信使用明文，请求和响应不会对通信方进行..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-08-05T09:14:26.000Z"}],["meta",{"property":"article:author","content":"CrabSAMA"}],["meta",{"property":"article:tag","content":"HTTP"}],["meta",{"property":"article:published_time","content":"2022-05-27T09:56:27.000Z"}],["meta",{"property":"article:modified_time","content":"2024-08-05T09:14:26.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"HTTPS\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-05-27T09:56:27.000Z\\",\\"dateModified\\":\\"2024-08-05T09:14:26.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"CrabSAMA\\",\\"url\\":\\"https://crabsama.github.io/CrabSAMA-Blog\\"}]}"]]},"headers":[{"level":2,"title":"HTTP VS HTTPS","slug":"http-vs-https","link":"#http-vs-https","children":[]}],"git":{"createdTime":1653648648000,"updatedTime":1722849266000,"contributors":[{"name":"CrabSAMA","email":"71915282@qq.com","commits":3}]},"readingTime":{"minutes":2.32,"words":697},"filePathRelative":"学习笔记/https.md","localizedDate":"2022年5月27日","excerpt":"<h2><code>HTTP</code> VS <code>HTTPS</code></h2>\\n<p><code>HTTP</code>特点：</p>\\n<ol>\\n<li>无状态：协议对客户端没有状态存储，对事物处理没有“记忆”能力，比如访问一个网站需要反复进行登录操作</li>\\n<li>无连接：<code>HTTP/1.1</code>之前，由于无状态特点，每次请求需要通过 <code>TCP</code> 三次握手四次挥手，和服务器重新建立连接</li>\\n<li>基于请求和响应：基本的特性，由客户端发起请求，服务端响应</li>\\n<li>通信使用明文，请求和响应不会对通信方进行确认、无法保证数据的完整性</li>\\n</ol>","autoDesc":true}');export{s as comp,g as data};
