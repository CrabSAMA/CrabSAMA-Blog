import{_ as t,c,i as o,o as r}from"./app-5IOFPByO.js";const a={};function p(i,e){return r(),c("div",null,e[0]||(e[0]=[o('<h1 id="为什么需要-import-react" tabindex="-1"><a class="header-anchor" href="#为什么需要-import-react"><span>为什么需要 import React</span></a></h1><p>在 vscode 里面使用 snippet 时，<code>rfce</code> 是 react function component export 的快捷命令，在使用这个 snippet 时，我看到和 react 相关的 snippet 都会在最上方有一行 <code>import React from &#39;react&#39;</code>，但其实这一行删掉了也能正常运行，不删掉每次 typescript 都会报 <code>unused import</code>，有点烦人。</p><p>去了解了一下，在 react 17 之前 react 解析 JSX 的方式都是将 JSX 转换成 <code>React.createElement</code>，在 React 17 之后采取了新的 JSX 解析方式，新的 JSX 转换方式不再依赖于 <code>React.createElement</code>，而是通过编译器自动引入必要的代码。这意味着你可以在不显式导入 <code>React</code> 的情况下使用 JSX。但其实本质上 import 语句还是需要的，只是换成了编译器帮你将这一行代码补上去。</p><p>这个其实跟 Vue 解析 JSX 的方式差不多，在 Vue 2 中的 JSX 解析也需要显式地引入 <code>h</code> / <code>createElement</code>，在后面的解析器逻辑中就将这些引入放到了编译器中处理，优化了用户体验。</p>',4)]))}const m=t(a,[["render",p]]),d=JSON.parse(`{"path":"/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/why-import-react.html","title":"为什么需要 import React","lang":"zh-CN","frontmatter":{"title":"为什么需要 import React","date":"2024-12-15T07:30:42.000Z","category":["学习笔记"],"tag":["React"],"description":"为什么需要 import React 在 vscode 里面使用 snippet 时，rfce 是 react function component export 的快捷命令，在使用这个 snippet 时，我看到和 react 相关的 snippet 都会在最上方有一行 import React from 'react'，但其实这一行删掉了也能正常运...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"为什么需要 import React\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-12-15T07:30:42.000Z\\",\\"dateModified\\":\\"2024-12-15T07:58:29.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"CrabSAMA\\",\\"url\\":\\"https://crabsama.github.io/CrabSAMA-Blog\\"}]}"],["meta",{"property":"og:url","content":"https://crabsama.github.io/CrabSAMA-Blog/CrabSAMA-Blog/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/why-import-react.html"}],["meta",{"property":"og:site_name","content":"CrabSAMA · 笔记"}],["meta",{"property":"og:title","content":"为什么需要 import React"}],["meta",{"property":"og:description","content":"为什么需要 import React 在 vscode 里面使用 snippet 时，rfce 是 react function component export 的快捷命令，在使用这个 snippet 时，我看到和 react 相关的 snippet 都会在最上方有一行 import React from 'react'，但其实这一行删掉了也能正常运..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-12-15T07:58:29.000Z"}],["meta",{"property":"article:tag","content":"React"}],["meta",{"property":"article:published_time","content":"2024-12-15T07:30:42.000Z"}],["meta",{"property":"article:modified_time","content":"2024-12-15T07:58:29.000Z"}]]},"git":{"createdTime":1734249509000,"updatedTime":1734249509000,"contributors":[{"name":"CrabSAMA","username":"CrabSAMA","email":"71915282@qq.com","commits":1,"url":"https://github.com/CrabSAMA"}]},"readingTime":{"minutes":1,"words":299},"filePathRelative":"学习笔记/why-import-react.md","excerpt":"\\n<p>在 vscode 里面使用 snippet 时，<code>rfce</code> 是 react function component export 的快捷命令，在使用这个 snippet 时，我看到和 react 相关的 snippet 都会在最上方有一行 <code>import React from 'react'</code>，但其实这一行删掉了也能正常运行，不删掉每次 typescript 都会报 <code>unused import</code>，有点烦人。</p>\\n<p>去了解了一下，在 react 17 之前 react 解析 JSX 的方式都是将 JSX 转换成 <code>React.createElement</code>，在 React 17 之后采取了新的 JSX 解析方式，新的 JSX 转换方式不再依赖于 <code>React.createElement</code>，而是通过编译器自动引入必要的代码。这意味着你可以在不显式导入 <code>React</code> 的情况下使用 JSX。但其实本质上 import 语句还是需要的，只是换成了编译器帮你将这一行代码补上去。</p>","autoDesc":true}`);export{m as comp,d as data};
