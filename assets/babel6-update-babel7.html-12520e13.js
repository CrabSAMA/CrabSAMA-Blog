const e=JSON.parse('{"key":"v-48fc26de","path":"/%E5%AE%9E%E9%99%85%E9%A1%B9%E7%9B%AE/babel6-update-babel7.html","title":"babel6升级到babel7","lang":"zh-CN","frontmatter":{"title":"babel6升级到babel7","category":["实际项目"],"description":"Babel 7 库的作用域 (scope) Babel 7 用了 npm 的 private scope，把全部的包都挂在在 @babel 下，类似的有 typescript 的 @type。 Babel 7 提供多种配置 .babelrc babel.config.js webpack babel loader 升级步骤 babel-core卸载掉，重新安装 @babel/core npm uninstall babel-core npm install -D @babel/core # 调用 babel-upgrade 这个工具将对 package.json 进行一次扫描 # 将旧版本的 plugin 自动替换成 babel7 的作用域 plugin npx babel-upgrade --write --install .babelrc引入解析 // babel7 以上的 plugin 都变成了 @babel 作用域下的包 需要在这里填写以便解析 { \\"plugins\\": [ \\"@babel/plugin-proposal-class-properties\\", \\"@babel/plugin-proposal-optional-chaining\\", \\"@babel/plugin-proposal-json-strings\\", \\"@babel/plugin-syntax-dynamic-import\\", \\"@babel/plugin-syntax-import-meta\\" ] } 在 package.json 文件中删除 babel6 相关的依赖 简单的来说，就是不以 @babel 开头的（除了 babel-loader）都删掉即可，或者看后面版本号写 6.XX.XX 的都删掉。 删除文件夹 node_modules 然后重新安装 rm -rf node_modules npm install","head":[["meta",{"property":"og:url","content":"https://crabsama.github.io/CrabSAMA-Blog/%E5%AE%9E%E9%99%85%E9%A1%B9%E7%9B%AE/babel6-update-babel7.html"}],["meta",{"property":"og:site_name","content":"CrabSAMA · 笔记"}],["meta",{"property":"og:title","content":"babel6升级到babel7"}],["meta",{"property":"og:description","content":"Babel 7 库的作用域 (scope) Babel 7 用了 npm 的 private scope，把全部的包都挂在在 @babel 下，类似的有 typescript 的 @type。 Babel 7 提供多种配置 .babelrc babel.config.js webpack babel loader 升级步骤 babel-core卸载掉，重新安装 @babel/core npm uninstall babel-core npm install -D @babel/core # 调用 babel-upgrade 这个工具将对 package.json 进行一次扫描 # 将旧版本的 plugin 自动替换成 babel7 的作用域 plugin npx babel-upgrade --write --install .babelrc引入解析 // babel7 以上的 plugin 都变成了 @babel 作用域下的包 需要在这里填写以便解析 { \\"plugins\\": [ \\"@babel/plugin-proposal-class-properties\\", \\"@babel/plugin-proposal-optional-chaining\\", \\"@babel/plugin-proposal-json-strings\\", \\"@babel/plugin-syntax-dynamic-import\\", \\"@babel/plugin-syntax-import-meta\\" ] } 在 package.json 文件中删除 babel6 相关的依赖 简单的来说，就是不以 @babel 开头的（除了 babel-loader）都删掉即可，或者看后面版本号写 6.XX.XX 的都删掉。 删除文件夹 node_modules 然后重新安装 rm -rf node_modules npm install"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-03-17T16:52:03.000Z"}],["meta",{"property":"article:modified_time","content":"2023-03-17T16:52:03.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"babel6升级到babel7\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-03-17T16:52:03.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"Babel 7 库的作用域 (scope)","slug":"babel-7-库的作用域-scope","link":"#babel-7-库的作用域-scope","children":[]},{"level":2,"title":"升级步骤","slug":"升级步骤","link":"#升级步骤","children":[]}],"git":{"createdTime":1679071923000,"updatedTime":1679071923000,"contributors":[{"name":"CrabSAMA","email":"71915282@qq.com","commits":1}]},"readingTime":{"minutes":0.87,"words":260},"filePathRelative":"实际项目/babel6-update-babel7.md","localizedDate":"2023年3月17日","excerpt":"<h2> Babel 7 库的作用域 (scope)</h2>\\n<ol>\\n<li>\\n<p>Babel 7 用了 npm 的 private scope，把全部的包都挂在在 @babel 下，类似的有 typescript 的 @type。</p>\\n</li>\\n<li>\\n<p>Babel 7 提供多种配置</p>\\n<p><code>.babelrc</code>\\n<code>babel.config.js</code>\\n<code>webpack babel loader</code></p>\\n</li>\\n</ol>\\n<h2> 升级步骤</h2>\\n<ol>\\n<li>\\n<p><code>babel-core</code>卸载掉，重新安装 <code>@babel/core</code></p>\\n<div class=\\"language-bash line-numbers-mode\\" data-ext=\\"sh\\"><pre class=\\"language-bash\\"><code><span class=\\"token function\\">npm</span> uninstall babel-core\\n<span class=\\"token function\\">npm</span> <span class=\\"token function\\">install</span> <span class=\\"token parameter variable\\">-D</span> @babel/core\\n<span class=\\"token comment\\"># 调用 babel-upgrade 这个工具将对 package.json 进行一次扫描</span>\\n<span class=\\"token comment\\"># 将旧版本的 plugin 自动替换成 babel7 的作用域 plugin</span>\\nnpx babel-upgrade <span class=\\"token parameter variable\\">--write</span> <span class=\\"token parameter variable\\">--install</span> \\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div></li>\\n<li>\\n<p><code>.babelrc</code>引入解析</p>\\n<div class=\\"language-json line-numbers-mode\\" data-ext=\\"json\\"><pre class=\\"language-json\\"><code><span class=\\"token comment\\">// babel7 以上的 plugin 都变成了 @babel 作用域下的包 需要在这里填写以便解析</span>\\n<span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token property\\">\\"plugins\\"</span><span class=\\"token operator\\">:</span> <span class=\\"token punctuation\\">[</span>\\n    <span class=\\"token string\\">\\"@babel/plugin-proposal-class-properties\\"</span><span class=\\"token punctuation\\">,</span>\\n    <span class=\\"token string\\">\\"@babel/plugin-proposal-optional-chaining\\"</span><span class=\\"token punctuation\\">,</span>\\n    <span class=\\"token string\\">\\"@babel/plugin-proposal-json-strings\\"</span><span class=\\"token punctuation\\">,</span>\\n    <span class=\\"token string\\">\\"@babel/plugin-syntax-dynamic-import\\"</span><span class=\\"token punctuation\\">,</span>\\n    <span class=\\"token string\\">\\"@babel/plugin-syntax-import-meta\\"</span>\\n  <span class=\\"token punctuation\\">]</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div></li>\\n<li>\\n<p>在 <code>package.json</code> 文件中删除 <code>babel6</code> 相关的依赖</p>\\n<p>简单的来说，就是不以 <code>@babel</code> 开头的（除了 babel-loader）都删掉即可，或者看后面版本号写 6.XX.XX 的都删掉。</p>\\n</li>\\n<li>\\n<p>删除文件夹 <code>node_modules</code> 然后重新安装</p>\\n<div class=\\"language-bash line-numbers-mode\\" data-ext=\\"sh\\"><pre class=\\"language-bash\\"><code><span class=\\"token function\\">rm</span> <span class=\\"token parameter variable\\">-rf</span> node_modules\\n<span class=\\"token function\\">npm</span> <span class=\\"token function\\">install</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div></li>\\n</ol>","autoDesc":true}');export{e as data};
