const e=JSON.parse('{"key":"v-48eab271","path":"/git/branch-strategy.html","title":"分支策略","lang":"zh-CN","frontmatter":{"title":"分支策略","date":"2020-12-10T10:02:48.000Z","lastUpdated":true,"category":["git","实际项目","经验"],"description":"在实际开发中，我们应该按照几个基本原则进行分支管理： 首先，master/release分支应该是非常稳定的，也就是仅用来发布新版本，平时不能在上面干活； 那在哪干活呢？干活都在dev/feature分支（或者是自己的分支）上，也就是说，dev/feature分支是不稳定的，到某个时候，比如1.0版本发布时，再把dev/feature分支合并（merge）到master/release上，在master/release分支发布1.0版本； 你和你的小伙伴们每个人都在自己的分支上干活，每个人都有自己的分支，时不时地往dev/feature分支上合并就可以了。 所以，团队合作的分支看起来就像这样：","head":[["meta",{"property":"og:url","content":"https://crabsama.github.io/CrabSAMA-Blog/git/branch-strategy.html"}],["meta",{"property":"og:site_name","content":"CrabSAMA · 笔记"}],["meta",{"property":"og:title","content":"分支策略"}],["meta",{"property":"og:description","content":"在实际开发中，我们应该按照几个基本原则进行分支管理： 首先，master/release分支应该是非常稳定的，也就是仅用来发布新版本，平时不能在上面干活； 那在哪干活呢？干活都在dev/feature分支（或者是自己的分支）上，也就是说，dev/feature分支是不稳定的，到某个时候，比如1.0版本发布时，再把dev/feature分支合并（merge）到master/release上，在master/release分支发布1.0版本； 你和你的小伙伴们每个人都在自己的分支上干活，每个人都有自己的分支，时不时地往dev/feature分支上合并就可以了。 所以，团队合作的分支看起来就像这样："}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://crabsama.github.io/CrabSAMA-Blog/"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-03-17T16:52:03.000Z"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"分支策略"}],["meta",{"property":"article:published_time","content":"2020-12-10T10:02:48.000Z"}],["meta",{"property":"article:modified_time","content":"2023-03-17T16:52:03.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"分支策略\\",\\"image\\":[\\"https://crabsama.github.io/CrabSAMA-Blog/\\"],\\"datePublished\\":\\"2020-12-10T10:02:48.000Z\\",\\"dateModified\\":\\"2023-03-17T16:52:03.000Z\\",\\"author\\":[]}"]]},"headers":[],"git":{"createdTime":1679071923000,"updatedTime":1679071923000,"contributors":[{"name":"CrabSAMA","email":"71915282@qq.com","commits":1}]},"readingTime":{"minutes":0.74,"words":222},"filePathRelative":"git/branch-strategy.md","localizedDate":"2020年12月10日","excerpt":"<p>在实际开发中，我们应该按照几个基本原则进行分支管理：\\n首先，<code>master</code>/<code>release</code>分支应该是非常稳定的，也就是仅用来发布新版本，平时不能在上面干活；\\n那在哪干活呢？干活都在<code>dev</code>/<code>feature</code>分支（或者是自己的分支）上，也就是说，<code>dev</code>/<code>feature</code>分支是不稳定的，到某个时候，比如1.0版本发布时，再把<code>dev</code>/<code>feature</code>分支合并（<code>merge</code>）到<code>master</code>/<code>release</code>上，在<code>master</code>/<code>release</code>分支发布1.0版本；\\n你和你的小伙伴们每个人都在<strong>自己的分支</strong>上干活，每个人<strong>都有自己的分支</strong>，时不时地往<code>dev</code>/<code>feature</code>分支上合并就可以了。\\n所以，团队合作的分支看起来就像这样：</p>","autoDesc":true}');export{e as data};
