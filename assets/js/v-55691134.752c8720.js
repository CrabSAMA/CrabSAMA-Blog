"use strict";(self.webpackChunkcrabsama_blog=self.webpackChunkcrabsama_blog||[]).push([[382],{2843:(e,t,i)=>{i.r(t),i.d(t,{data:()=>a});const a={key:"v-55691134",path:"/git/%E5%A4%9A%E4%BA%BA%E5%8D%8F%E4%BD%9C.html",title:"多人协作",lang:"zh-CN",frontmatter:{title:"多人协作",date:"2020-06-09T13:59:19.000Z",lastUpdated:!0,categories:["git"]},excerpt:"",headers:[{level:2,title:"个人做法（大学时期）",slug:"个人做法-大学时期",children:[]}],git:{createdTime:1655281638e3,updatedTime:1655281638e3,contributors:[{name:"CrabSAMA",email:"71915282@qq.com",commits:1}]},filePathRelative:"git/多人协作.md"}},6325:(e,t,i)=>{i.r(t),i.d(t,{default:()=>o});const a=(0,i(6252).uE)('<p>多人协作的工作模式通常是这样：</p><ol><li>首先，可以试图用<code>git push origin &lt;branch-name&gt;</code>推送自己的修改；</li><li>如果推送失败，则因为远程分支比你的本地更新，需要先用<code>git pull</code>试图合并；</li><li>如果合并有冲突，则解决冲突，并在本地提交；</li><li>没有冲突或者解决掉冲突后，再用<code>git push origin &lt;branch-name&gt;</code>推送就能成功！ 如果<code>git pull</code>提示<code>no tracking information</code>，则说明本地分支和远程分支的链接关系没有创建，用命令<code>git branch --set-upstream-to &lt;branch-name&gt; origin/&lt;branch-name&gt;</code>。</li></ol><p>这就是多人协作的工作模式，一旦熟悉了，就非常简单。</p><h2 id="个人做法-大学时期" tabindex="-1"><a class="header-anchor" href="#个人做法-大学时期" aria-hidden="true">#</a> 个人做法（大学时期）</h2><p>一般我会先<code>commit</code>自己的代码，将代码放进暂存区，保证安全；</p><p>然后<code>git pull</code>获取最新的代码，如果有冲突则进行合并；</p><p>最后进行<code>git push origin &lt;branch-name&gt;</code>，将代码推送到远程分支。</p>',7),c={},o=(0,i(3744).Z)(c,[["render",function(e,t){return a}]])}}]);