"use strict";(self.webpackChunkcrabsama_blog=self.webpackChunkcrabsama_blog||[]).push([[5673],{126:(e,d,c)=>{c.r(d),c.d(d,{data:()=>t});const t={key:"v-5eab2350",path:"/git/%E5%88%86%E6%94%AF%E7%AD%96%E7%95%A5.html",title:"分支策略",lang:"zh-CN",frontmatter:{title:"分支策略",date:"2020-12-10T10:02:48.000Z",lastUpdated:!0,categories:["git"]},excerpt:"",headers:[],git:{createdTime:1655281638e3,updatedTime:1655281638e3,contributors:[{name:"CrabSAMA",email:"71915282@qq.com",commits:1}]},filePathRelative:"git/分支策略.md"}},3832:(e,d,c)=>{c.r(d),c.d(d,{default:()=>s});var t=c(6252);const o=c.p+"assets/img/image-20220615160739907.c5b4dd0c.png",a=(0,t.uE)('<p>在实际开发中，我们应该按照几个基本原则进行分支管理： 首先，<code>master</code>/<code>release</code>分支应该是非常稳定的，也就是仅用来发布新版本，平时不能在上面干活； 那在哪干活呢？干活都在<code>dev</code>/<code>feature</code>分支（或者是自己的分支）上，也就是说，<code>dev</code>/<code>feature</code>分支是不稳定的，到某个时候，比如1.0版本发布时，再把<code>dev</code>/<code>feature</code>分支合并（<code>merge</code>）到<code>master</code>/<code>release</code>上，在<code>master</code>/<code>release</code>分支发布1.0版本； 你和你的小伙伴们每个人都在<strong>自己的分支</strong>上干活，每个人<strong>都有自己的分支</strong>，时不时地往<code>dev</code>/<code>feature</code>分支上合并就可以了。 所以，团队合作的分支看起来就像这样：</p><p><img src="'+o+'" alt="image-20220615160739907"></p>',2),r={},s=(0,c(3744).Z)(r,[["render",function(e,d){return a}]])}}]);