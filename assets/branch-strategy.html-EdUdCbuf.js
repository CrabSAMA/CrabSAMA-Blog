import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as t,o,i as r}from"./app-BOw3isfV.js";const a="/CrabSAMA-Blog/assets/image-20220615160739907-CaKd1JZr.png",c={},d=r('<p>在实际开发中，我们应该按照几个基本原则进行分支管理：<br> 首先，<code>master</code>/<code>release</code>分支应该是非常稳定的，也就是仅用来发布新版本，平时不能在上面干活；<br> 那在哪干活呢？干活都在<code>dev</code>/<code>feature</code>分支（或者是自己的分支）上，也就是说，<code>dev</code>/<code>feature</code>分支是不稳定的，到某个时候，比如 1.0 版本发布时，再把<code>dev</code>/<code>feature</code>分支合并（<code>merge</code>）到<code>master</code>/<code>release</code>上，在<code>master</code>/<code>release</code>分支发布 1.0 版本；<br> 你和你的小伙伴们每个人都在<strong>自己的分支</strong>上干活，每个人<strong>都有自己的分支</strong>，时不时地往<code>dev</code>/<code>feature</code>分支上合并就可以了。<br> 所以，团队合作的分支看起来就像这样：</p><figure><img src="'+a+'" alt="image-20220615160739907" tabindex="0" loading="lazy"><figcaption>image-20220615160739907</figcaption></figure>',2),n=[d];function s(i,m){return o(),t("div",null,n)}const g=e(c,[["render",s],["__file","branch-strategy.html.vue"]]),u=JSON.parse('{"path":"/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/branch-strategy.html","title":"分支策略","lang":"zh-CN","frontmatter":{"title":"分支策略","date":"2020-12-11T10:02:48.000Z","category":["学习笔记"],"tag":["git"],"description":"在实际开发中，我们应该按照几个基本原则进行分支管理： 首先，master/release分支应该是非常稳定的，也就是仅用来发布新版本，平时不能在上面干活； 那在哪干活呢？干活都在dev/feature分支（或者是自己的分支）上，也就是说，dev/feature分支是不稳定的，到某个时候，比如 1.0 版本发布时，再把dev/feature分支合并（me...","head":[["meta",{"property":"og:url","content":"https://crabsama.github.io/CrabSAMA-Blog/CrabSAMA-Blog/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/branch-strategy.html"}],["meta",{"property":"og:site_name","content":"CrabSAMA · 笔记"}],["meta",{"property":"og:title","content":"分支策略"}],["meta",{"property":"og:description","content":"在实际开发中，我们应该按照几个基本原则进行分支管理： 首先，master/release分支应该是非常稳定的，也就是仅用来发布新版本，平时不能在上面干活； 那在哪干活呢？干活都在dev/feature分支（或者是自己的分支）上，也就是说，dev/feature分支是不稳定的，到某个时候，比如 1.0 版本发布时，再把dev/feature分支合并（me..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-08-05T09:14:26.000Z"}],["meta",{"property":"article:author","content":"CrabSAMA"}],["meta",{"property":"article:tag","content":"git"}],["meta",{"property":"article:published_time","content":"2020-12-11T10:02:48.000Z"}],["meta",{"property":"article:modified_time","content":"2024-08-05T09:14:26.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"分支策略\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2020-12-11T10:02:48.000Z\\",\\"dateModified\\":\\"2024-08-05T09:14:26.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"CrabSAMA\\",\\"url\\":\\"https://crabsama.github.io/CrabSAMA-Blog\\"}]}"]]},"headers":[],"git":{"createdTime":1655281638000,"updatedTime":1722849266000,"contributors":[{"name":"CrabSAMA","email":"71915282@qq.com","commits":3}]},"readingTime":{"minutes":0.75,"words":225},"filePathRelative":"学习笔记/branch-strategy.md","localizedDate":"2020年12月11日","excerpt":"<p>在实际开发中，我们应该按照几个基本原则进行分支管理：<br>\\n首先，<code>master</code>/<code>release</code>分支应该是非常稳定的，也就是仅用来发布新版本，平时不能在上面干活；<br>\\n那在哪干活呢？干活都在<code>dev</code>/<code>feature</code>分支（或者是自己的分支）上，也就是说，<code>dev</code>/<code>feature</code>分支是不稳定的，到某个时候，比如 1.0 版本发布时，再把<code>dev</code>/<code>feature</code>分支合并（<code>merge</code>）到<code>master</code>/<code>release</code>上，在<code>master</code>/<code>release</code>分支发布 1.0 版本；<br>\\n你和你的小伙伴们每个人都在<strong>自己的分支</strong>上干活，每个人<strong>都有自己的分支</strong>，时不时地往<code>dev</code>/<code>feature</code>分支上合并就可以了。<br>\\n所以，团队合作的分支看起来就像这样：</p>","autoDesc":true}');export{g as comp,u as data};
