const e=JSON.parse('{"key":"v-5af74616","path":"/Node.js/text-encode.html","title":"文本编码","lang":"zh-CN","frontmatter":{"title":"文本编码","date":"2020-07-09T02:15:04.000Z","lastUpdated":true,"category":["Node.js"],"description":"使用NodeJS编写前端工具时，操作得最多的是文本文件，因此也就涉及到了文件编码的处理问题。我们常用的文本编码有UTF8和GBK两种，并且UTF8文件还可能带有BOM。在读取不同编码的文本文件时，需要将文件内容转换为JS使用的UTF8编码字符串后才能正常处理。 BOM的移除 BOM用于标记一个文本文件使用Unicode编码，其本身是一个Unicode字符（\\"\\\\\\\\uFEFF\\"），位于文本文件头部。在不同的Unicode编码下，BOM字符对应的二进制字节如下：","head":[["meta",{"property":"og:url","content":"https://crabsama.github.io/CrabSAMA-Blog/CrabSAMA-Blog/Node.js/text-encode.html"}],["meta",{"property":"og:site_name","content":"CrabSAMA · 笔记"}],["meta",{"property":"og:title","content":"文本编码"}],["meta",{"property":"og:description","content":"使用NodeJS编写前端工具时，操作得最多的是文本文件，因此也就涉及到了文件编码的处理问题。我们常用的文本编码有UTF8和GBK两种，并且UTF8文件还可能带有BOM。在读取不同编码的文本文件时，需要将文件内容转换为JS使用的UTF8编码字符串后才能正常处理。 BOM的移除 BOM用于标记一个文本文件使用Unicode编码，其本身是一个Unicode字符（\\"\\\\\\\\uFEFF\\"），位于文本文件头部。在不同的Unicode编码下，BOM字符对应的二进制字节如下："}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-03-17T16:52:03.000Z"}],["meta",{"property":"article:published_time","content":"2020-07-09T02:15:04.000Z"}],["meta",{"property":"article:modified_time","content":"2023-03-17T16:52:03.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"文本编码\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2020-07-09T02:15:04.000Z\\",\\"dateModified\\":\\"2023-03-17T16:52:03.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"BOM的移除","slug":"bom的移除","link":"#bom的移除","children":[]},{"level":2,"title":"GBK转UTF8","slug":"gbk转utf8","link":"#gbk转utf8","children":[]}],"git":{"createdTime":1679071923000,"updatedTime":1679071923000,"contributors":[{"name":"CrabSAMA","email":"71915282@qq.com","commits":1}]},"readingTime":{"minutes":1.71,"words":512},"filePathRelative":"Node.js/text-encode.md","localizedDate":"2020年7月9日","excerpt":"<p>使用<code>NodeJS</code>编写前端工具时，操作得最多的是文本文件，因此也就涉及到了文件编码的处理问题。我们常用的文本编码有<code>UTF8</code>和<code>GBK</code>两种，并且<code>UTF8</code>文件还可能带有<code>BOM</code>。在读取不同编码的文本文件时，需要将文件内容转换为<code>JS</code>使用的<code>UTF8</code>编码字符串后才能正常处理。</p>\\n<h2> BOM的移除</h2>\\n<p><code>BOM</code>用于标记一个文本文件使用<code>Unicode</code>编码，其本身是一个<code>Unicode</code>字符<code>（\\"\\\\\\\\uFEFF\\"）</code>，位于文本文件头部。在不同的<code>Unicode</code>编码下，<code>BOM</code>字符对应的二进制字节如下：</p>","autoDesc":true}');export{e as data};
