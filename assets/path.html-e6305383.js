const t=JSON.parse('{"key":"v-3fe8f5fe","path":"/Node.js/path.html","title":"Path路径","lang":"zh-CN","frontmatter":{"title":"Path路径","date":"2020-07-09T01:28:55.000Z","lastUpdated":true,"category":["Node.js"],"description":"官方文档：http://nodejs.org/api/path.html 操作文件时难免不与文件路径打交道。NodeJS提供了path内置模块来简化路径相关操作，并提升代码可读性。以下分别介绍几个常用的API。 path.normalize 将传入的路径转换为标准路径，具体讲的话，除了解析路径中的.与..外，还能去掉多余的斜杠。如果有程序需要使用路径作为某些数据的索引，但又允许用户随意输入路径时，就需要使用该方法保证路径的唯一性。","head":[["meta",{"property":"og:url","content":"https://crabsama.github.io/CrabSAMA-Blog/CrabSAMA-Blog/Node.js/path.html"}],["meta",{"property":"og:site_name","content":"CrabSAMA · 笔记"}],["meta",{"property":"og:title","content":"Path路径"}],["meta",{"property":"og:description","content":"官方文档：http://nodejs.org/api/path.html 操作文件时难免不与文件路径打交道。NodeJS提供了path内置模块来简化路径相关操作，并提升代码可读性。以下分别介绍几个常用的API。 path.normalize 将传入的路径转换为标准路径，具体讲的话，除了解析路径中的.与..外，还能去掉多余的斜杠。如果有程序需要使用路径作为某些数据的索引，但又允许用户随意输入路径时，就需要使用该方法保证路径的唯一性。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-03-17T16:52:03.000Z"}],["meta",{"property":"article:published_time","content":"2020-07-09T01:28:55.000Z"}],["meta",{"property":"article:modified_time","content":"2023-03-17T16:52:03.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Path路径\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2020-07-09T01:28:55.000Z\\",\\"dateModified\\":\\"2023-03-17T16:52:03.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"path.normalize","slug":"path-normalize","link":"#path-normalize","children":[]},{"level":2,"title":"path.join","slug":"path-join","link":"#path-join","children":[]},{"level":2,"title":"path.extname","slug":"path-extname","link":"#path-extname","children":[]}],"git":{"createdTime":1679071923000,"updatedTime":1679071923000,"contributors":[{"name":"CrabSAMA","email":"71915282@qq.com","commits":1}]},"readingTime":{"minutes":1.13,"words":340},"filePathRelative":"Node.js/path.md","localizedDate":"2020年7月9日","excerpt":"<p><strong>官方文档：</strong><a href=\\"http://nodejs.org/api/path.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">http://nodejs.org/api/path.html</a>\\n操作文件时难免不与文件路径打交道。<code>NodeJS</code>提供了<code>path</code>内置模块来简化路径相关操作，并提升代码可读性。以下分别介绍几个常用的<code>API</code>。</p>\\n<h2> <code>path.normalize</code></h2>\\n<p>将传入的路径转换为标准路径，具体讲的话，除了解析路径中的.与..外，还能去掉多余的斜杠。如果有程序需要使用路径作为某些数据的索引，但又允许用户随意输入路径时，就需要使用该方法保证路径的唯一性。</p>","autoDesc":true}');export{t as data};
