const e=JSON.parse('{"key":"v-510eecdd","path":"/%E5%89%8D%E7%AB%AF%E5%B7%A5%E7%A8%8B%E5%8C%96/unit-test-function.html","title":"公用方法单元测试","lang":"zh-CN","frontmatter":{"title":"公用方法单元测试","date":"2020-12-22T09:06:00.000Z","category":["前端开发","前端工程化"],"tag":["前端工程化"],"description":"使用场景 公共 function 和 公共 vue component 框架选型 Jest 是功能最全的测试运行器。它所需的配置是最少的，默认安装了 JSDOM，内置断言且命令行的用户体验非常好。不过你需要一个能够将单文件组件导入到测试中的预处理器。我们已经创建了 vue-jest 预处理器来处理最常见的单文件组件特性，但仍不是 vue-loader 100% 的功能。 摘自 Vue Test Utils 官网","head":[["meta",{"property":"og:url","content":"https://crabsama.github.io/CrabSAMA-Blog/CrabSAMA-Blog/%E5%89%8D%E7%AB%AF%E5%B7%A5%E7%A8%8B%E5%8C%96/unit-test-function.html"}],["meta",{"property":"og:site_name","content":"CrabSAMA · 笔记"}],["meta",{"property":"og:title","content":"公用方法单元测试"}],["meta",{"property":"og:description","content":"使用场景 公共 function 和 公共 vue component 框架选型 Jest 是功能最全的测试运行器。它所需的配置是最少的，默认安装了 JSDOM，内置断言且命令行的用户体验非常好。不过你需要一个能够将单文件组件导入到测试中的预处理器。我们已经创建了 vue-jest 预处理器来处理最常见的单文件组件特性，但仍不是 vue-loader 100% 的功能。 摘自 Vue Test Utils 官网"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://crabsama.github.io/CrabSAMA-Blog/CrabSAMA-Blog/"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-03-18T04:29:56.000Z"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"公用方法单元测试"}],["meta",{"property":"article:tag","content":"前端工程化"}],["meta",{"property":"article:published_time","content":"2020-12-22T09:06:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-03-18T04:29:56.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"公用方法单元测试\\",\\"image\\":[\\"https://crabsama.github.io/CrabSAMA-Blog/CrabSAMA-Blog/\\"],\\"datePublished\\":\\"2020-12-22T09:06:00.000Z\\",\\"dateModified\\":\\"2023-03-18T04:29:56.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"使用场景","slug":"使用场景","link":"#使用场景","children":[]},{"level":2,"title":"框架选型","slug":"框架选型","link":"#框架选型","children":[{"level":3,"title":"安装","slug":"安装","link":"#安装","children":[]},{"level":3,"title":"配置","slug":"配置","link":"#配置","children":[]}]},{"level":2,"title":"测试工作","slug":"测试工作","link":"#测试工作","children":[{"level":3,"title":"基础概念","slug":"基础概念","link":"#基础概念","children":[]},{"level":3,"title":"实操","slug":"实操","link":"#实操","children":[]}]},{"level":2,"title":"代码覆盖率","slug":"代码覆盖率","link":"#代码覆盖率","children":[]}],"git":{"createdTime":1679071923000,"updatedTime":1679113796000,"contributors":[{"name":"CrabSAMA","email":"71915282@qq.com","commits":2}]},"readingTime":{"minutes":4.78,"words":1433},"filePathRelative":"前端工程化/unit-test-function.md","localizedDate":"2020年12月22日","excerpt":"<h2> 使用场景</h2>\\n<p>公共 function 和 公共 vue component</p>\\n<h2> 框架选型</h2>\\n<blockquote>\\n<p><strong><a href=\\"https://jestjs.io/docs/zh-Hans/getting-started\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Jest</a></strong> 是功能最全的测试运行器。它所需的配置是最少的，默认安装了 JSDOM，内置断言且命令行的用户体验非常好。不过你需要一个能够将单文件组件导入到测试中的预处理器。我们已经创建了 <code>vue-jest</code> 预处理器来处理最常见的单文件组件特性，但仍不是 <code>vue-loader</code> 100% 的功能。</p>\\n<p><a href=\\"https://vue-test-utils.vuejs.org/zh/installation/#%E9%80%89%E6%8B%A9%E4%B8%80%E4%B8%AA%E6%B5%8B%E8%AF%95%E8%BF%90%E8%A1%8C%E5%99%A8\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">摘自 Vue Test Utils 官网</a></p>\\n</blockquote>","autoDesc":true}');export{e as data};
