import{_ as s,c as a,i as t,o as l}from"./app-5IOFPByO.js";const n={};function e(h,i){return l(),a("div",null,i[0]||(i[0]=[t(`<div class="language-javascript line-numbers-mode" data-highlighter="shiki" data-ext="javascript" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-javascript"><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">console</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">((\\[\\])</span><span style="--shiki-light:#0184BC;--shiki-dark:#C678DD;">?</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">true</span><span style="--shiki-light:#0184BC;--shiki-dark:#C678DD;">:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">false</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">console</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">((\\[\\]</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">==</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">false</span><span style="--shiki-light:#0184BC;--shiki-dark:#C678DD;">?</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">true</span><span style="--shiki-light:#0184BC;--shiki-dark:#C678DD;">:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">false</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">));</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">console</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(({}</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">==</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">false</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span><span style="--shiki-light:#0184BC;--shiki-dark:#C678DD;">?</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">true</span><span style="--shiki-light:#0184BC;--shiki-dark:#C678DD;">:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">false</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><p>得到的结果：<br> true true false</p><p>此题考察类型转换，三元运算符先**“分清是非”<strong>，再决定今后该走哪条路，“==”运算符比较</strong>“喜欢”**Number 类型。（我就不严谨地这么一说，若要刨根问底，请看《JavaScript 权威指南》）</p><p>下面是题目的类型转换结果：</p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-js"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Boolean</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(\\[\\]); </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">//true</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Number</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(\\[\\]); </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">//0</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Number</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">({}); </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// NaN</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Number</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">false</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">); </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">//0</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>因此：</p><div class="language-js line-numbers-mode" data-highlighter="shiki" data-ext="js" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-js"><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">console</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">((\\[\\])</span><span style="--shiki-light:#0184BC;--shiki-dark:#C678DD;">?</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">true</span><span style="--shiki-light:#0184BC;--shiki-dark:#C678DD;">:</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">fasle</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">);</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// =&gt; console.log((true)?true:false);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">console</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(\\[\\]</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">==</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">false</span><span style="--shiki-light:#0184BC;--shiki-dark:#C678DD;">?</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">true</span><span style="--shiki-light:#0184BC;--shiki-dark:#C678DD;">:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">false</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">); </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// =&gt; console.log(0==0?true:false);</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">console</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(({}</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">==</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">false</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span><span style="--shiki-light:#0184BC;--shiki-dark:#C678DD;">?</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">true</span><span style="--shiki-light:#0184BC;--shiki-dark:#C678DD;">:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">false</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">); </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// =&gt; console.log((NaN==0)?true:false);</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="《javascript-权威指南》的部分相关知识点" tabindex="-1"><a class="header-anchor" href="#《javascript-权威指南》的部分相关知识点"><span>《JavaScript 权威指南》的部分相关知识点</span></a></h2><hr><p><strong>“==”运算符（两个操作数的类型不相同时）</strong></p><ul><li>如果一个值是**<em>null</em><strong>，另一个值是</strong><em>undefined</em><strong>，则它们</strong>相等**</li><li>如果一个值是<strong>数字</strong>，另一个值是<strong>字符串</strong>，先将<strong>字符串转换为数字</strong>，然后使用转换后的值进行比较。</li><li>如果其中一个值是<strong>true</strong>，则将其<strong>转换为 1</strong>再进行比较。如果其中的一个值是<strong>false</strong>，则将其<strong>转换为 0</strong>再进行比较。</li><li>如果一个值是<strong>对象</strong>，另一个值是<strong>数字</strong>或<strong>字符串</strong>，则将<strong>对象转换为原始值</strong>，再进行比较。</li></ul><p><strong>对象到数字的转换</strong></p><ul><li>如果对象具有 valueOf()方法，后者返回一个原始值，则 JavaScript 将这个原始值转换为数字（如果需要的话）并返回一个数字。</li><li>否则，如果对象具有 toString()方法，后者返回一个原始值，则 JavaScript 将其转换并返回。（对象的 toString()方法返回一个字符串直接量（作者所说的原始值），JavaScript 将这个字符串转换为数字类型，并返回这个数字）。</li><li>否则，JavaScript 抛出一个类型错误异常。</li></ul><p><strong>空数组转换为数字 0</strong></p><ul><li>数组继承了默认的 valueOf()方法，这个方法返回一个对象而不是一个原始值，因此，数组到数字的转换则调用 toString()方法。空数组转换为空字符串，空字符串转换为数字 0。<code>（Number.valueOf(Array.toString()) =&gt; 0）</code></li></ul>`,16)]))}const p=s(n,[["render",e]]),r=JSON.parse('{"path":"/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/js-type-changed.html","title":"js类型转换","lang":"zh-CN","frontmatter":{"title":"js类型转换","category":["学习笔记"],"tag":["JavaScript","面试题"],"description":"得到的结果： true true false 此题考察类型转换，三元运算符先**“分清是非”，再决定今后该走哪条路，“==”运算符比较“喜欢”**Number 类型。（我就不严谨地这么一说，若要刨根问底，请看《JavaScript 权威指南》） 下面是题目的类型转换结果： 因此： 《JavaScript 权威指南》的部分相关知识点 “==”运算符（两个...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"js类型转换\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-08-17T14:39:26.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"CrabSAMA\\",\\"url\\":\\"https://crabsama.github.io/CrabSAMA-Blog\\"}]}"],["meta",{"property":"og:url","content":"https://crabsama.github.io/CrabSAMA-Blog/CrabSAMA-Blog/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/js-type-changed.html"}],["meta",{"property":"og:site_name","content":"CrabSAMA · 笔记"}],["meta",{"property":"og:title","content":"js类型转换"}],["meta",{"property":"og:description","content":"得到的结果： true true false 此题考察类型转换，三元运算符先**“分清是非”，再决定今后该走哪条路，“==”运算符比较“喜欢”**Number 类型。（我就不严谨地这么一说，若要刨根问底，请看《JavaScript 权威指南》） 下面是题目的类型转换结果： 因此： 《JavaScript 权威指南》的部分相关知识点 “==”运算符（两个..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-08-17T14:39:26.000Z"}],["meta",{"property":"article:tag","content":"面试题"}],["meta",{"property":"article:tag","content":"JavaScript"}],["meta",{"property":"article:modified_time","content":"2024-08-17T14:39:26.000Z"}]]},"git":{"createdTime":1679071923000,"updatedTime":1723905566000,"contributors":[{"name":"CrabSAMA","username":"CrabSAMA","email":"71915282@qq.com","commits":4,"url":"https://github.com/CrabSAMA"}]},"readingTime":{"minutes":1.76,"words":529},"filePathRelative":"学习笔记/js-type-changed.md","excerpt":"<div class=\\"language-javascript line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"javascript\\" style=\\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\\"><pre class=\\"shiki shiki-themes one-light one-dark-pro vp-code\\"><code class=\\"language-javascript\\"><span class=\\"line\\"><span style=\\"--shiki-light:#383A42;--shiki-dark:#E5C07B\\">console</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">.</span><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">log</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">((\\\\[\\\\])</span><span style=\\"--shiki-light:#0184BC;--shiki-dark:#C678DD\\">?</span><span style=\\"--shiki-light:#986801;--shiki-dark:#D19A66\\">true</span><span style=\\"--shiki-light:#0184BC;--shiki-dark:#C678DD\\">:</span><span style=\\"--shiki-light:#986801;--shiki-dark:#D19A66\\">false</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">);</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#383A42;--shiki-dark:#E5C07B\\">console</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">.</span><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">log</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">((\\\\[\\\\]</span><span style=\\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\\">==</span><span style=\\"--shiki-light:#986801;--shiki-dark:#D19A66\\">false</span><span style=\\"--shiki-light:#0184BC;--shiki-dark:#C678DD\\">?</span><span style=\\"--shiki-light:#986801;--shiki-dark:#D19A66\\">true</span><span style=\\"--shiki-light:#0184BC;--shiki-dark:#C678DD\\">:</span><span style=\\"--shiki-light:#986801;--shiki-dark:#D19A66\\">false</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">));</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#383A42;--shiki-dark:#E5C07B\\">console</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">.</span><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">log</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">(({}</span><span style=\\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\\">==</span><span style=\\"--shiki-light:#986801;--shiki-dark:#D19A66\\">false</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">)</span><span style=\\"--shiki-light:#0184BC;--shiki-dark:#C678DD\\">?</span><span style=\\"--shiki-light:#986801;--shiki-dark:#D19A66\\">true</span><span style=\\"--shiki-light:#0184BC;--shiki-dark:#C678DD\\">:</span><span style=\\"--shiki-light:#986801;--shiki-dark:#D19A66\\">false</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">)</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{p as comp,r as data};
