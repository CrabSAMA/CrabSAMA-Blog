import{_ as i,c as a,i as n,o as e}from"./app-BN3TCIWe.js";const l={};function t(p,s){return e(),a("div",null,s[0]||(s[0]=[n(`<h1 id="vue-router-路由守卫探秘" tabindex="-1"><a class="header-anchor" href="#vue-router-路由守卫探秘"><span>Vue Router 路由守卫探秘</span></a></h1><h2 id="hash-模式" tabindex="-1"><a class="header-anchor" href="#hash-模式"><span>hash 模式</span></a></h2><p>hash 模式本质上就是对 history 模式的上层封装</p><div class="language-typescript line-numbers-mode" data-highlighter="shiki" data-ext="typescript" data-title="typescript" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">export</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> function</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> createWebHashHistory</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">base</span><span style="--shiki-light:#0184BC;--shiki-dark:#C678DD;">?</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#0184BC;--shiki-dark:#E5C07B;"> string</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span><span style="--shiki-light:#0184BC;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> RouterHistory</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  // Make sure this implementation is fine in terms of encoding, specially for IE11</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  // for \`file://\`, directly use the pathname and ignore the base</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  // location.pathname contains an initial \`/\` even at the root: \`https://example.com\`</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">  base</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;"> location</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">host</span><span style="--shiki-light:#0184BC;--shiki-dark:#C678DD;"> ?</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;"> base</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> ||</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;"> location</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">pathname</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> +</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;"> location</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">search</span><span style="--shiki-light:#0184BC;--shiki-dark:#C678DD;"> :</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;&#39;</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">  // allow the user to provide a \`#\` in the middle: \`/base/#/app\`</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">!</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">base</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">includes</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;#&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)) </span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">base</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> +=</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &#39;#&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  if</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">__DEV__</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> &amp;&amp;</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> !</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">base</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">endsWith</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;#/&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">&amp;&amp;</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;"> !</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">base</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">endsWith</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&#39;#&#39;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)) {</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">    warn</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">      \`A hash base must end with a &quot;#&quot;:</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\n</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;</span><span style="--shiki-light:#CA1243;--shiki-dark:#C678DD;">\${</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">base</span><span style="--shiki-light:#CA1243;--shiki-dark:#C678DD;">}</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot; should be &quot;</span><span style="--shiki-light:#CA1243;--shiki-dark:#C678DD;">\${</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;">base</span><span style="--shiki-light:#50A14F;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">replace</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span></span>
<span class="line"><span style="--shiki-light:#CA1243;--shiki-dark:#E06C75;">        /</span><span style="--shiki-light:#0184BC;--shiki-dark:#E06C75;">#</span><span style="--shiki-light:#986801;--shiki-dark:#E06C75;">.</span><span style="--shiki-light:#0184BC;--shiki-dark:#D19A66;">*</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">$</span><span style="--shiki-light:#CA1243;--shiki-dark:#E06C75;">/</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#CA1243;--shiki-dark:#98C379;">        &#39;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">#</span><span style="--shiki-light:#CA1243;--shiki-dark:#98C379;">&#39;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      )</span><span style="--shiki-light:#CA1243;--shiki-dark:#C678DD;">}</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;.\`</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    )</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  }</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">  return</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> createWebHistory</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#E06C75;">base</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>只是对 base 进行了一些处理之后去调用的 <code>createWebHistory</code>。</p><ul><li><p>初次进入页面</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>对router.beforeEach 的匿名回调 (router.ts:202)</span></span>
<span class="line"><span>对runWithContext 的匿名回调 (navigationGuards.ts:181)</span></span>
<span class="line"><span>(匿名函数) (navigationGuards.ts:129)</span></span>
<span class="line"><span>对new Promise 的匿名回调 (navigationGuards.ts:180)</span></span>
<span class="line"><span>(匿名函数) (navigationGuards.ts:138)</span></span>
<span class="line"><span>runWithContext (runtime-core.esm-bundler.js:3996)</span></span>
<span class="line"><span>runWithContext (router.ts:825)</span></span>
<span class="line"><span>对promise.then 的匿名回调 (router.ts:1333)</span></span>
<span class="line"><span>---Promise.then---</span></span>
<span class="line"><span>对promise.then 的匿名回调 (router.ts:1333)</span></span>
<span class="line"><span>对guards.reduce 的匿名回调 (router.ts:1332)</span></span>
<span class="line"><span>对runGuardQueue(guards).then 的匿名回调 (router.ts:881)</span></span>
<span class="line"><span>---Promise.then---</span></span>
<span class="line"><span>对runGuardQueue(guards).then 的匿名回调 (router.ts:872)</span></span>
<span class="line"><span>pushWithRedirect (router.ts:730) --- 初始化的时候会将当前路径 push 到 history 中</span></span>
<span class="line"><span>push (router.ts:625)</span></span>
<span class="line"><span>对push(routerHistory.location).catch 的匿名回调 (router.ts:1289)</span></span>
<span class="line"><span>use (runtime-core.esm-bundler.js:3863) --- Vue.use(router)</span></span>
<span class="line"><span>[全局代码: &quot;http://localhost:5173/src/main.ts&quot;] (main.ts:30)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>更改地址栏 url 跳转</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>对router.beforeEach 的匿名回调 (router.ts:202)</span></span>
<span class="line"><span>对runWithContext 的匿名回调 (navigationGuards.ts:181)</span></span>
<span class="line"><span>(匿名函数) (navigationGuards.ts:129)</span></span>
<span class="line"><span>对new Promise 的匿名回调 (navigationGuards.ts:180)</span></span>
<span class="line"><span>(匿名函数) (navigationGuards.ts:138)</span></span>
<span class="line"><span>runWithContext (runtime-core.esm-bundler.js:3996)</span></span>
<span class="line"><span>runWithContext (router.ts:825)</span></span>
<span class="line"><span>对promise.then 的匿名回调 (router.ts:1335)</span></span>
<span class="line"><span>---Promise.then---</span></span>
<span class="line"><span>对promise.then 的匿名回调 (router.ts:1335)</span></span>
<span class="line"><span>对guards.reduce 的匿名回调 (router.ts:1334)</span></span>
<span class="line"><span>对runGuardQueue(guards).then 的匿名回调 (router.ts:881)</span></span>
<span class="line"><span>---Promise.then---</span></span>
<span class="line"><span>对runGuardQueue(guards).then 的匿名回调 (router.ts:872)</span></span>
<span class="line"><span>对routerHistory.listen 的匿名回调 (router.ts:1052) --- 此处执行 listener 的逻辑，调用 navigate 函数</span></span>
<span class="line"><span>对listeners.forEach 的匿名回调 (html5.ts:100)</span></span>
<span class="line"><span>对listeners.forEach 的匿名回调 (html5.ts:99)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>由于 hash 模式更改的是 <code>/#/</code> 后面的内容，对于浏览器来说更改 hash 后面的内容等于更改参数，不需要刷新页面，因此还会停留在当前页面。那具体的页面路由跳转就肯定是交由代码去实现的了。</p><p>初始化的时候注册了一个 <code>removeHistoryListener</code>，更改地址栏 url 跳转时触发了这个 listener，因为此时属于离开一个页面跳转到下一个页面了。</p><p>这个 listener 做的事情其实就是进行 navigate，即变更地址栏 url 的时候会执行 navigate 的逻辑。</p></li><li><p>编程式跳转</p><p>编程式跳转就更简单了，直接调用了 navigate 的方法。</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>对router.beforeEach 的匿名回调 (router.ts:202)</span></span>
<span class="line"><span>对runWithContext 的匿名回调 (navigationGuards.ts:181)</span></span>
<span class="line"><span>(匿名函数) (navigationGuards.ts:129)</span></span>
<span class="line"><span>对new Promise 的匿名回调 (navigationGuards.ts:180)</span></span>
<span class="line"><span>(匿名函数) (navigationGuards.ts:138)</span></span>
<span class="line"><span>runWithContext (runtime-core.esm-bundler.js:3996)</span></span>
<span class="line"><span>runWithContext (router.ts:825)</span></span>
<span class="line"><span>对promise.then 的匿名回调 (router.ts:1335)</span></span>
<span class="line"><span>---Promise.then---</span></span>
<span class="line"><span>对promise.then 的匿名回调 (router.ts:1335)</span></span>
<span class="line"><span>对guards.reduce 的匿名回调 (router.ts:1334)</span></span>
<span class="line"><span>对runGuardQueue(guards).then 的匿名回调 (router.ts:881)</span></span>
<span class="line"><span>---Promise.then---</span></span>
<span class="line"><span>对runGuardQueue(guards).then 的匿名回调 (router.ts:872)</span></span>
<span class="line"><span>pushWithRedirect (router.ts:730)</span></span>
<span class="line"><span>push (router.ts:625)</span></span>
<span class="line"><span>navigate (RouterLink.ts:228) --- 此处直接调用了 navigate 的逻辑</span></span>
<span class="line"><span>callWithErrorHandling (runtime-core.esm-bundler.js:199)</span></span>
<span class="line"><span>callWithAsyncErrorHandling (runtime-core.esm-bundler.js:206)</span></span>
<span class="line"><span>invoker (runtime-dom.esm-bundler.js:729)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h2 id="history-模式" tabindex="-1"><a class="header-anchor" href="#history-模式"><span>history 模式</span></a></h2><ul><li><p>初次进入页面</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>对router.beforeEach 的匿名回调 (router.ts:202)</span></span>
<span class="line"><span>对runWithContext 的匿名回调 (navigationGuards.ts:181)</span></span>
<span class="line"><span>(匿名函数) (navigationGuards.ts:129)</span></span>
<span class="line"><span>对new Promise 的匿名回调 (navigationGuards.ts:180)</span></span>
<span class="line"><span>(匿名函数) (navigationGuards.ts:138)</span></span>
<span class="line"><span>runWithContext (runtime-core.esm-bundler.js:3996)</span></span>
<span class="line"><span>runWithContext (router.ts:825)</span></span>
<span class="line"><span>对promise.then 的匿名回调 (router.ts:1335)</span></span>
<span class="line"><span>---Promise.then---</span></span>
<span class="line"><span>对promise.then 的匿名回调 (router.ts:1335)</span></span>
<span class="line"><span>对guards.reduce 的匿名回调 (router.ts:1334)</span></span>
<span class="line"><span>对runGuardQueue(guards).then 的匿名回调 (router.ts:881)</span></span>
<span class="line"><span>---Promise.then---</span></span>
<span class="line"><span>对runGuardQueue(guards).then 的匿名回调 (router.ts:872)</span></span>
<span class="line"><span>pushWithRedirect (router.ts:730)</span></span>
<span class="line"><span>push (router.ts:625)</span></span>
<span class="line"><span>对push(routerHistory.location).catch 的匿名回调 (router.ts:1291)</span></span>
<span class="line"><span>use (runtime-core.esm-bundler.js:3863)</span></span>
<span class="line"><span>[全局代码: &quot;http://localhost:5173/src/main.ts&quot;] (main.ts:30)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>对比了一下，和 hash 模式没有区别，都是利用了初始化时的那次 push 来触发的路由守卫。</p></li><li><p>更改地址栏 url 跳转</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>对router.beforeEach 的匿名回调 (router.ts:202)</span></span>
<span class="line"><span>对runWithContext 的匿名回调 (navigationGuards.ts:181)</span></span>
<span class="line"><span>(匿名函数) (navigationGuards.ts:129)</span></span>
<span class="line"><span>对new Promise 的匿名回调 (navigationGuards.ts:180)</span></span>
<span class="line"><span>(匿名函数) (navigationGuards.ts:138)</span></span>
<span class="line"><span>runWithContext (runtime-core.esm-bundler.js:3996)</span></span>
<span class="line"><span>runWithContext (router.ts:825)</span></span>
<span class="line"><span>对promise.then 的匿名回调 (router.ts:1335)</span></span>
<span class="line"><span>---Promise.then---</span></span>
<span class="line"><span>对promise.then 的匿名回调 (router.ts:1335)</span></span>
<span class="line"><span>对guards.reduce 的匿名回调 (router.ts:1334)</span></span>
<span class="line"><span>对runGuardQueue(guards).then 的匿名回调 (router.ts:881)</span></span>
<span class="line"><span>---Promise.then---</span></span>
<span class="line"><span>对runGuardQueue(guards).then 的匿名回调 (router.ts:872)</span></span>
<span class="line"><span>pushWithRedirect (router.ts:730)</span></span>
<span class="line"><span>push (router.ts:625)</span></span>
<span class="line"><span>对push(routerHistory.location).catch 的匿名回调 (router.ts:1291)</span></span>
<span class="line"><span>use (runtime-core.esm-bundler.js:3863)</span></span>
<span class="line"><span>[全局代码: &quot;http://localhost:5173/src/main.ts&quot;] (main.ts:30)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这个和上面的初次进入页面其实就是同一种 case 了，在 history 模式下，更改地址栏 url 就等于刷新页面进入一个全新的页面，因此和上面的是同一种情况。</p></li><li><p>编程式跳转</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>对router.beforeEach 的匿名回调 (router.ts:202)</span></span>
<span class="line"><span>对runWithContext 的匿名回调 (navigationGuards.ts:181)</span></span>
<span class="line"><span>(匿名函数) (navigationGuards.ts:129)</span></span>
<span class="line"><span>对new Promise 的匿名回调 (navigationGuards.ts:180)</span></span>
<span class="line"><span>(匿名函数) (navigationGuards.ts:138)</span></span>
<span class="line"><span>runWithContext (runtime-core.esm-bundler.js:3996)</span></span>
<span class="line"><span>runWithContext (router.ts:825)</span></span>
<span class="line"><span>对promise.then 的匿名回调 (router.ts:1335)</span></span>
<span class="line"><span>---Promise.then---</span></span>
<span class="line"><span>对promise.then 的匿名回调 (router.ts:1335)</span></span>
<span class="line"><span>对guards.reduce 的匿名回调 (router.ts:1334)</span></span>
<span class="line"><span>对runGuardQueue(guards).then 的匿名回调 (router.ts:881)</span></span>
<span class="line"><span>---Promise.then---</span></span>
<span class="line"><span>对runGuardQueue(guards).then 的匿名回调 (router.ts:872)</span></span>
<span class="line"><span>pushWithRedirect (router.ts:730)</span></span>
<span class="line"><span>push (router.ts:625)</span></span>
<span class="line"><span>navigate (RouterLink.ts:228)</span></span>
<span class="line"><span>callWithErrorHandling (runtime-core.esm-bundler.js:199)</span></span>
<span class="line"><span>callWithAsyncErrorHandling (runtime-core.esm-bundler.js:206)</span></span>
<span class="line"><span>invoker (runtime-dom.esm-bundler.js:729)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>和上面 hash 模式一样。</p></li></ul><h2 id="总结" tabindex="-1"><a class="header-anchor" href="#总结"><span>总结</span></a></h2><p><code>navigate</code> -&gt; <code>runGuardQueue</code> -&gt; <code>Promise.then</code></p><p>路由守卫的注册其实就是将函数放到一个数组中保存下来，触发的时机是调用 <code>navigate</code> 方法，在不同的 case 下所有涉及到变更路由的操作最终都是调用 <code>navigate</code> 方法，只是调用路线不一样而已。</p><p>路由守卫函数的注册都使用了 Promise 进行了封装，转成了微任务函数，然后使用 JavaScript 的事件循环机制，通过微任务进行 queue 的任务调度。在每次调用 <code>navigate</code> 方法的时候，按照指定的顺序（先全局，再组件）将守卫函数取出来，然后依次调度执行。在 <code>beforeEach</code> 相关的路由守卫中支持<strong>重定向</strong>和<strong>取消路由</strong>，这种情况下会抛出一个 reject 的 Promise 去处理。</p>`,12)]))}const h=i(l,[["render",t],["__file","vue-router-guard.html.vue"]]),d=JSON.parse('{"path":"/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/vue-router-guard.html","title":"Vue Router 路由守卫探秘","lang":"zh-CN","frontmatter":{"title":"Vue Router 路由守卫探秘","date":"2025-03-18T07:55:50.000Z","category":["学习笔记"],"tag":["Vue","Vue Router"],"description":"Vue Router 路由守卫探秘 hash 模式 hash 模式本质上就是对 history 模式的上层封装 只是对 base 进行了一些处理之后去调用的 createWebHistory。 初次进入页面 更改地址栏 url 跳转 由于 hash 模式更改的是 /#/ 后面的内容，对于浏览器来说更改 hash 后面的内容等于更改参数，不需要刷新页面，...","head":[["meta",{"property":"og:url","content":"https://crabsama.github.io/CrabSAMA-Blog/CrabSAMA-Blog/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/vue-router-guard.html"}],["meta",{"property":"og:site_name","content":"CrabSAMA · 笔记"}],["meta",{"property":"og:title","content":"Vue Router 路由守卫探秘"}],["meta",{"property":"og:description","content":"Vue Router 路由守卫探秘 hash 模式 hash 模式本质上就是对 history 模式的上层封装 只是对 base 进行了一些处理之后去调用的 createWebHistory。 初次进入页面 更改地址栏 url 跳转 由于 hash 模式更改的是 /#/ 后面的内容，对于浏览器来说更改 hash 后面的内容等于更改参数，不需要刷新页面，..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-03-18T07:57:25.000Z"}],["meta",{"property":"article:author","content":"CrabSAMA"}],["meta",{"property":"article:tag","content":"Vue"}],["meta",{"property":"article:tag","content":"Vue Router"}],["meta",{"property":"article:published_time","content":"2025-03-18T07:55:50.000Z"}],["meta",{"property":"article:modified_time","content":"2025-03-18T07:57:25.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Vue Router 路由守卫探秘\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2025-03-18T07:55:50.000Z\\",\\"dateModified\\":\\"2025-03-18T07:57:25.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"CrabSAMA\\",\\"url\\":\\"https://crabsama.github.io/CrabSAMA-Blog\\"}]}"]]},"headers":[{"level":2,"title":"hash 模式","slug":"hash-模式","link":"#hash-模式","children":[]},{"level":2,"title":"history 模式","slug":"history-模式","link":"#history-模式","children":[]},{"level":2,"title":"总结","slug":"总结","link":"#总结","children":[]}],"git":{"createdTime":1742284645000,"updatedTime":1742284645000,"contributors":[{"name":"CrabSAMA","email":"71915282@qq.com","commits":1}]},"readingTime":{"minutes":4.98,"words":1493},"filePathRelative":"学习笔记/vue-router-guard.md","localizedDate":"2025年3月18日","excerpt":"\\n<h2>hash 模式</h2>\\n<p>hash 模式本质上就是对 history 模式的上层封装</p>\\n<div class=\\"language-typescript line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"typescript\\" data-title=\\"typescript\\" style=\\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\\"><pre class=\\"shiki shiki-themes one-light one-dark-pro vp-code\\"><code><span class=\\"line\\"><span style=\\"--shiki-light:#A626A4;--shiki-dark:#C678DD\\">export</span><span style=\\"--shiki-light:#A626A4;--shiki-dark:#C678DD\\"> function</span><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\"> createWebHashHistory</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">(</span><span style=\\"--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic\\">base</span><span style=\\"--shiki-light:#0184BC;--shiki-dark:#C678DD\\">?</span><span style=\\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\\">:</span><span style=\\"--shiki-light:#0184BC;--shiki-dark:#E5C07B\\"> string</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">)</span><span style=\\"--shiki-light:#0184BC;--shiki-dark:#ABB2BF\\">:</span><span style=\\"--shiki-light:#C18401;--shiki-dark:#E5C07B\\"> RouterHistory</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\"> {</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\\">  // Make sure this implementation is fine in terms of encoding, specially for IE11</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\\">  // for `file://`, directly use the pathname and ignore the base</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\\">  // location.pathname contains an initial `/` even at the root: `https://example.com`</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#383A42;--shiki-dark:#E06C75\\">  base</span><span style=\\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\\"> =</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#E5C07B\\"> location</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">.</span><span style=\\"--shiki-light:#E45649;--shiki-dark:#E06C75\\">host</span><span style=\\"--shiki-light:#0184BC;--shiki-dark:#C678DD\\"> ?</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#E06C75\\"> base</span><span style=\\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\\"> ||</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#E5C07B\\"> location</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">.</span><span style=\\"--shiki-light:#E45649;--shiki-dark:#E06C75\\">pathname</span><span style=\\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\\"> +</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#E5C07B\\"> location</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">.</span><span style=\\"--shiki-light:#E45649;--shiki-dark:#E06C75\\">search</span><span style=\\"--shiki-light:#0184BC;--shiki-dark:#C678DD\\"> :</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> \'\'</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic\\">  // allow the user to provide a `#` in the middle: `/base/#/app`</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#A626A4;--shiki-dark:#C678DD\\">  if</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\"> (</span><span style=\\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\\">!</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#E5C07B\\">base</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">.</span><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">includes</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">(</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\">\'#\'</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">)) </span><span style=\\"--shiki-light:#383A42;--shiki-dark:#E06C75\\">base</span><span style=\\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\\"> +=</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\"> \'#\'</span></span>\\n<span class=\\"line\\"></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#A626A4;--shiki-dark:#C678DD\\">  if</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\"> (</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#E06C75\\">__DEV__</span><span style=\\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\\"> &amp;&amp;</span><span style=\\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\\"> !</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#E5C07B\\">base</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">.</span><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">endsWith</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">(</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\">\'#/\'</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">) </span><span style=\\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\\">&amp;&amp;</span><span style=\\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\\"> !</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#E5C07B\\">base</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">.</span><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">endsWith</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">(</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\">\'#\'</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">)) {</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">    warn</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">(</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\">      `A hash base must end with a \\"#\\":</span><span style=\\"--shiki-light:#0184BC;--shiki-dark:#56B6C2\\">\\\\n</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\">\\"</span><span style=\\"--shiki-light:#CA1243;--shiki-dark:#C678DD\\">${</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#E06C75\\">base</span><span style=\\"--shiki-light:#CA1243;--shiki-dark:#C678DD\\">}</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\">\\" should be \\"</span><span style=\\"--shiki-light:#CA1243;--shiki-dark:#C678DD\\">${</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#E5C07B\\">base</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#ABB2BF\\">.</span><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\">replace</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">(</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#CA1243;--shiki-dark:#E06C75\\">        /</span><span style=\\"--shiki-light:#0184BC;--shiki-dark:#E06C75\\">#</span><span style=\\"--shiki-light:#986801;--shiki-dark:#E06C75\\">.</span><span style=\\"--shiki-light:#0184BC;--shiki-dark:#D19A66\\">*</span><span style=\\"--shiki-light:#A626A4;--shiki-dark:#C678DD\\">$</span><span style=\\"--shiki-light:#CA1243;--shiki-dark:#E06C75\\">/</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">,</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#CA1243;--shiki-dark:#98C379\\">        \'</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\">#</span><span style=\\"--shiki-light:#CA1243;--shiki-dark:#98C379\\">\'</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">      )</span><span style=\\"--shiki-light:#CA1243;--shiki-dark:#C678DD\\">}</span><span style=\\"--shiki-light:#50A14F;--shiki-dark:#98C379\\">\\".`</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">    )</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">  }</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#A626A4;--shiki-dark:#C678DD\\">  return</span><span style=\\"--shiki-light:#4078F2;--shiki-dark:#61AFEF\\"> createWebHistory</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">(</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#E06C75\\">base</span><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">)</span></span>\\n<span class=\\"line\\"><span style=\\"--shiki-light:#383A42;--shiki-dark:#ABB2BF\\">}</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}');export{h as comp,d as data};
