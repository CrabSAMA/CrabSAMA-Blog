const t=JSON.parse('{"key":"v-20c0e1f0","path":"/%E5%89%8D%E7%AB%AF%E5%B7%A5%E7%A8%8B%E5%8C%96/composition-api-programming.html","title":"Composition API 编程思想","lang":"zh-CN","frontmatter":{"title":"Composition API 编程思想","date":"2023-02-07T06:46:40.000Z","lastUpdated":true,"category":["前端工程化"],"description":"组合式 API (Composition API) 是一系列 API 的集合，使我们可以使用函数而不是声明选项的方式书写 Vue 组件。 在刚接触 Vue3 的时候，由于了解到 Vue3 最大的变化就是提供了全新的 composition api，因此在初上手的时候，所有组件清一色用的都是 &lt;script setup&gt; + coposition api 编写，想着多用新特性总没错。在经历了一段时间的使用后，才逐渐有了一些自己的理解。 在我看来，组合式 API 不是 Vue3 的必须品，它有些时候更像一种编码思维，在该用到的地方使用会给你提升十分多的效率，但如果是为了用而用，在大多数简单的场景下，可能选项式 API 会显得更简单无脑一些，因为它给你列好了框架，手把手教你该把代码放在哪里。官方的原话是：","head":[["meta",{"property":"og:url","content":"https://crabsama.github.io/CrabSAMA-Blog/CrabSAMA-Blog/%E5%89%8D%E7%AB%AF%E5%B7%A5%E7%A8%8B%E5%8C%96/composition-api-programming.html"}],["meta",{"property":"og:site_name","content":"CrabSAMA · 笔记"}],["meta",{"property":"og:title","content":"Composition API 编程思想"}],["meta",{"property":"og:description","content":"组合式 API (Composition API) 是一系列 API 的集合，使我们可以使用函数而不是声明选项的方式书写 Vue 组件。 在刚接触 Vue3 的时候，由于了解到 Vue3 最大的变化就是提供了全新的 composition api，因此在初上手的时候，所有组件清一色用的都是 &lt;script setup&gt; + coposition api 编写，想着多用新特性总没错。在经历了一段时间的使用后，才逐渐有了一些自己的理解。 在我看来，组合式 API 不是 Vue3 的必须品，它有些时候更像一种编码思维，在该用到的地方使用会给你提升十分多的效率，但如果是为了用而用，在大多数简单的场景下，可能选项式 API 会显得更简单无脑一些，因为它给你列好了框架，手把手教你该把代码放在哪里。官方的原话是："}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-03-17T16:52:03.000Z"}],["meta",{"property":"article:published_time","content":"2023-02-07T06:46:40.000Z"}],["meta",{"property":"article:modified_time","content":"2023-03-17T16:52:03.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Composition API 编程思想\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-02-07T06:46:40.000Z\\",\\"dateModified\\":\\"2023-03-17T16:52:03.000Z\\",\\"author\\":[]}"]]},"headers":[],"git":{"createdTime":1679071923000,"updatedTime":1679071923000,"contributors":[{"name":"CrabSAMA","email":"71915282@qq.com","commits":1}]},"readingTime":{"minutes":1.9,"words":571},"filePathRelative":"前端工程化/composition-api-programming.md","localizedDate":"2023年2月7日","excerpt":"<blockquote>\\n<p>组合式 API (Composition API) 是一系列 API 的集合，使我们可以使用函数而不是声明选项的方式书写 Vue 组件。</p>\\n</blockquote>\\n<p>在刚接触 Vue3 的时候，由于了解到 Vue3 最大的变化就是提供了全新的 composition api，因此在初上手的时候，所有组件清一色用的都是 <code>&lt;script setup&gt;</code> + coposition api 编写，想着多用新特性总没错。在经历了一段时间的使用后，才逐渐有了一些自己的理解。</p>\\n<p>在我看来，组合式 API 不是 Vue3 的必须品，它有些时候更像一种编码思维，在该用到的地方使用会给你提升十分多的效率，但如果是为了用而用，在大多数简单的场景下，可能选项式 API 会显得更简单无脑一些，因为它给你列好了框架，手把手教你该把代码放在哪里。官方的原话是：</p>","autoDesc":true}');export{t as data};
