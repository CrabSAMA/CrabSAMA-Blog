import{_ as s,c as e,i as t,o as a}from"./app-BS7W8Gul.js";const n={};function l(o,i){return a(),e("div",null,i[0]||(i[0]=[t(`<p>由于 <code>husky</code> 这个插件在升级到 5.+ 的版本后有一个配置上的更新，因此需要对现有项目中的配置文件进行重新配置。如果现在有项目使用 4.x 版本想升级的也可以进行升级。</p><p>附上<a href="https://typicode.github.io/husky/#/?id=migrate-from-v4-to-v7" target="_blank" rel="noopener noreferrer">官方文档</a>，有什么问题可以先自己看一下官方文档~</p><ol><li><p>升级<code>husky</code>版本（如果不需要可以跳过）</p><p>更改 package.json 里面的版本号为最新，然后<code>sudo lnpm install</code>即可。</p></li><li><p>初始化新版 <code>husky</code></p><p>新版 <code>husky</code> 需要有一个 <code>install</code> 的操作，安装新版后需要执行<code>husky install</code>命令，<strong>刚 <code>clone</code> 下来的项目也需要进行 <code>install</code> 操作</strong>，同理。</p></li><li><p>根据之前的配置文件重新配置</p><p>一般来说，现有项目的 <code>husky</code> 配置都在 <code>package.json</code> 中，可以看到有 <code>husky</code> 的相关配置，例如：</p></li></ol><div class="language-json line-numbers-mode" data-highlighter="shiki" data-ext="json" data-title="json" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// package.json</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">    ...</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    &quot;husky&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">      &quot;hooks&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">        &quot;commit-msg&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;commitlint -E HUSKY_GIT_PARAMS&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">        &quot;pre-commit&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;lint-staged&quot;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">      }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    },</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这里其实就是定义了两个 <code>hook</code>，在新版 <code>husky</code> 中定义 <code>hook</code> 的方式更改为了命令行，如果想要新增 <code>hook</code>，需要执行：</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">npx</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> husky</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> add</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> .husky/pre-commit</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;lint-staged&quot;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> add</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> .husky/pre-commit</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>以上面的配置为例，我们需要在新版 <code>husky</code> 中添加两个钩子：<code>commit-msg</code> 和 <code>pre-commit</code>，那就执行两次上面的命令即可。但是在新版 <code>husky</code> 中还有一些变化，一个比较重要的点就是 <code>HUSKY_GIT_PARAMS</code> 这个环境变量不在了，要使用 $1、$2 这种方式替代（<a href="https://typicode.github.io/husky/#/?id=husky_git_params-ie-commitlint-" target="_blank" rel="noopener noreferrer">文档</a>），因此添加 <code>commlint</code> 的命令应该是：</p><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">npx</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> husky</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> add</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> .husky/commit-msg</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;npx --no-install commitlint --edit </span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">$1</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">git</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> add</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> .husky/commit-msg</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>在上述配置完成后，就可以重试 <code>commit</code> 操作，看看是否 <code>husky</code> 是否正常运行啦！</strong></p>`,9)]))}const d=s(n,[["render",l],["__file","husky4-to-5.html.vue"]]),p=JSON.parse('{"path":"/%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/husky4-to-5.html","title":"Git Hook 插件——husky4.x升级到5.+指南","lang":"zh-CN","frontmatter":{"title":"Git Hook 插件——husky4.x升级到5.+指南","date":"2022-08-04T07:37:51.000Z","category":["解决方案"],"tag":["前端工程化","Git","husky"],"description":"由于 husky 这个插件在升级到 5.+ 的版本后有一个配置上的更新，因此需要对现有项目中的配置文件进行重新配置。如果现在有项目使用 4.x 版本想升级的也可以进行升级。 附上官方文档，有什么问题可以先自己看一下官方文档~ 升级husky版本（如果不需要可以跳过） 更改 package.json 里面的版本号为最新，然后sudo lnpm insta...","head":[["meta",{"property":"og:url","content":"https://crabsama.github.io/CrabSAMA-Blog/CrabSAMA-Blog/%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/husky4-to-5.html"}],["meta",{"property":"og:site_name","content":"CrabSAMA · 笔记"}],["meta",{"property":"og:title","content":"Git Hook 插件——husky4.x升级到5.+指南"}],["meta",{"property":"og:description","content":"由于 husky 这个插件在升级到 5.+ 的版本后有一个配置上的更新，因此需要对现有项目中的配置文件进行重新配置。如果现在有项目使用 4.x 版本想升级的也可以进行升级。 附上官方文档，有什么问题可以先自己看一下官方文档~ 升级husky版本（如果不需要可以跳过） 更改 package.json 里面的版本号为最新，然后sudo lnpm insta..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-09-29T07:33:27.000Z"}],["meta",{"property":"article:author","content":"CrabSAMA"}],["meta",{"property":"article:tag","content":"前端工程化"}],["meta",{"property":"article:tag","content":"Git"}],["meta",{"property":"article:tag","content":"husky"}],["meta",{"property":"article:published_time","content":"2022-08-04T07:37:51.000Z"}],["meta",{"property":"article:modified_time","content":"2024-09-29T07:33:27.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Git Hook 插件——husky4.x升级到5.+指南\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-08-04T07:37:51.000Z\\",\\"dateModified\\":\\"2024-09-29T07:33:27.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"CrabSAMA\\",\\"url\\":\\"https://crabsama.github.io/CrabSAMA-Blog\\"}]}"]]},"headers":[],"git":{"createdTime":1659599852000,"updatedTime":1727595207000,"contributors":[{"name":"CrabSAMA","email":"71915282@qq.com","commits":5}]},"readingTime":{"minutes":1.59,"words":478},"filePathRelative":"解决方案/husky4-to-5.md","localizedDate":"2022年8月4日","excerpt":"<p>由于 <code>husky</code> 这个插件在升级到 5.+ 的版本后有一个配置上的更新，因此需要对现有项目中的配置文件进行重新配置。如果现在有项目使用 4.x 版本想升级的也可以进行升级。</p>\\n<p>附上<a href=\\"https://typicode.github.io/husky/#/?id=migrate-from-v4-to-v7\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">官方文档</a>，有什么问题可以先自己看一下官方文档~</p>\\n<ol>\\n<li>\\n<p>升级<code>husky</code>版本（如果不需要可以跳过）</p>\\n<p>更改 package.json 里面的版本号为最新，然后<code>sudo lnpm install</code>即可。</p>\\n</li>\\n<li>\\n<p>初始化新版 <code>husky</code></p>\\n<p>新版 <code>husky</code> 需要有一个 <code>install</code> 的操作，安装新版后需要执行<code>husky install</code>命令，<strong>刚 <code>clone</code> 下来的项目也需要进行 <code>install</code> 操作</strong>，同理。</p>\\n</li>\\n<li>\\n<p>根据之前的配置文件重新配置</p>\\n<p>一般来说，现有项目的 <code>husky</code> 配置都在 <code>package.json</code> 中，可以看到有 <code>husky</code> 的相关配置，例如：</p>\\n</li>\\n</ol>","autoDesc":true}');export{d as comp,p as data};
