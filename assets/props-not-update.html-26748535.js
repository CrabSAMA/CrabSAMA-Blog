const e=JSON.parse('{"key":"v-1a134a6e","path":"/%E5%AE%9E%E9%99%85%E9%A1%B9%E7%9B%AE/props-not-update.html","title":"Props(v-model)变更不生效问题","lang":"zh-CN","frontmatter":{"title":"Props(v-model)变更不生效问题","date":"2023-08-15T03:14:30.000Z","category":["实际项目"],"tag":["vue"],"description":"现象 在我们写 Vue 组件时，经常会遇到自定义 v-model 或 prop.sync 的需求。一般来说，我们有两种方法实现这种需求： 组件内部定义一个变量，使用两个 watch 分别监听 props 和 内部变量的变更，前者初始化内部变量，后者在内部变量变更时 emit 一个 input / update:prop 事件使外部变量同步变更。 组件内部使用一个 computed 变量，定义它的 get 方法为获取 props 值，set 方法为 emit 事件。","head":[["meta",{"property":"og:url","content":"https://crabsama.github.io/CrabSAMA-Blog/CrabSAMA-Blog/%E5%AE%9E%E9%99%85%E9%A1%B9%E7%9B%AE/props-not-update.html"}],["meta",{"property":"og:site_name","content":"CrabSAMA · 笔记"}],["meta",{"property":"og:title","content":"Props(v-model)变更不生效问题"}],["meta",{"property":"og:description","content":"现象 在我们写 Vue 组件时，经常会遇到自定义 v-model 或 prop.sync 的需求。一般来说，我们有两种方法实现这种需求： 组件内部定义一个变量，使用两个 watch 分别监听 props 和 内部变量的变更，前者初始化内部变量，后者在内部变量变更时 emit 一个 input / update:prop 事件使外部变量同步变更。 组件内部使用一个 computed 变量，定义它的 get 方法为获取 props 值，set 方法为 emit 事件。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-08-15T03:15:26.000Z"}],["meta",{"property":"article:tag","content":"vue"}],["meta",{"property":"article:published_time","content":"2023-08-15T03:14:30.000Z"}],["meta",{"property":"article:modified_time","content":"2023-08-15T03:15:26.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Props(v-model)变更不生效问题\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-08-15T03:14:30.000Z\\",\\"dateModified\\":\\"2023-08-15T03:15:26.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"现象","slug":"现象","link":"#现象","children":[]},{"level":2,"title":"原因","slug":"原因","link":"#原因","children":[]}],"git":{"createdTime":1692069326000,"updatedTime":1692069326000,"contributors":[{"name":"CrabSAMA","email":"71915282@qq.com","commits":1}]},"readingTime":{"minutes":1.81,"words":544},"filePathRelative":"实际项目/props-not-update.md","localizedDate":"2023年8月15日","excerpt":"<h2> 现象</h2>\\n<p>在我们写 Vue 组件时，经常会遇到自定义 v-model 或 prop.sync 的需求。一般来说，我们有两种方法实现这种需求：</p>\\n<ol>\\n<li>组件内部定义一个变量，使用两个 <code>watch</code> 分别监听 props 和 内部变量的变更，前者初始化内部变量，后者在内部变量变更时 <code>emit</code> 一个 <code>input </code>/ <code>update:prop</code> 事件使外部变量同步变更。</li>\\n<li>组件内部使用一个 <code>computed</code> 变量，定义它的 <code>get</code> 方法为获取 props 值，set 方法为 <code>emit</code> 事件。</li>\\n</ol>","autoDesc":true}');export{e as data};
