import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as s,o,c as p,a as e,b as n,d as c,e as r}from"./app-D1nyDd9a.js";const i={},l={href:"https://www.tslang.cn/docs/handbook/advanced-types.html",target:"_blank",rel:"noopener noreferrer"},d=r(`<h1 id="索引类型-index-types" tabindex="-1"><a class="header-anchor" href="#索引类型-index-types"><span>索引类型（Index types）</span></a></h1><p>在项目中时常有通过传入对象 <code>key</code> 值获取对象中其中一个值的需求，现在有一个想法，想通过动态传入的 <code>key</code> 值获取到对应的类型。在 <code>TypeScript</code> 中想要取得一个 <code>interface</code> 其中的一个属性，可以使用这种写法：</p><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">const</span> something<span class="token operator">:</span> Interface<span class="token punctuation">[</span><span class="token string">&#39;key&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> interfaceObj<span class="token punctuation">[</span><span class="token string">&#39;key&#39;</span><span class="token punctuation">]</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>上面的代码就是取 <code>Interface</code> 中名为 <code>key</code> 的类型。</p><p>在方法中我们经常是这样写：</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">getProperty</span><span class="token punctuation">(</span><span class="token parameter">obj<span class="token punctuation">,</span> key</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> obj<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// 动态地取某个对象中的一个属性</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>而在 <code>typescript</code> 中要怎样写呢？下面是一个例子：</p><div class="language-typescript line-numbers-mode" data-ext="ts" data-title="ts"><pre class="language-typescript"><code><span class="token keyword">function</span> <span class="token generic-function"><span class="token function">getProperty</span><span class="token generic class-name"><span class="token operator">&lt;</span><span class="token constant">T</span><span class="token punctuation">,</span> <span class="token constant">K</span> <span class="token keyword">extends</span> <span class="token keyword">keyof</span> <span class="token constant">T</span><span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span>obj<span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">,</span> key<span class="token operator">:</span> <span class="token constant">K</span><span class="token punctuation">)</span><span class="token operator">:</span> <span class="token constant">T</span><span class="token punctuation">[</span><span class="token constant">K</span><span class="token punctuation">]</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> obj<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// obj[key] is of type T[K]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这里取到的类型就是 <code>T[&#39;K&#39;]</code>，正合我意！</p><h2 id="索引访问操作符" tabindex="-1"><a class="header-anchor" href="#索引访问操作符"><span>索引访问操作符</span></a></h2><p><code>K</code> 指代一个动态类型</p><p>在这里，类型语法反映了表达式语法。 这意味着 <code>person[&#39;name&#39;]</code>具有类型 <code>Person[&#39;name&#39;]</code> — 在我们的例子里则为 <code>string</code>类型。 然而，就像索引类型查询一样，你可以在普通的上下文里使用 <code>T[K]</code>，这正是它的强大所在。 你只要确保类型变量 <code>K extends keyof T</code>就可以了。</p>`,12);function u(k,y){const a=s("ExternalLinkIcon");return o(),p("div",null,[e("blockquote",null,[e("p",null,[n("TypeScript 高级类型"),e("a",l,[n("官方文档"),c(a)])])]),d])}const g=t(i,[["render",u],["__file","index-types.html.vue"]]),b=JSON.parse('{"path":"/TypeScript/index-types.html","title":"索引类型","lang":"zh-CN","frontmatter":{"title":"索引类型","category":["TypeScript"],"tag":["TypeScript"],"description":"TypeScript 高级类型官方文档 索引类型（Index types） 在项目中时常有通过传入对象 key 值获取对象中其中一个值的需求，现在有一个想法，想通过动态传入的 key 值获取到对应的类型。在 TypeScript 中想要取得一个 interface 其中的一个属性，可以使用这种写法： 上面的代码就是取 Interface 中名为 key...","head":[["meta",{"property":"og:url","content":"https://crabsama.github.io/CrabSAMA-Blog/CrabSAMA-Blog/TypeScript/index-types.html"}],["meta",{"property":"og:site_name","content":"CrabSAMA · 笔记"}],["meta",{"property":"og:title","content":"索引类型"}],["meta",{"property":"og:description","content":"TypeScript 高级类型官方文档 索引类型（Index types） 在项目中时常有通过传入对象 key 值获取对象中其中一个值的需求，现在有一个想法，想通过动态传入的 key 值获取到对应的类型。在 TypeScript 中想要取得一个 interface 其中的一个属性，可以使用这种写法： 上面的代码就是取 Interface 中名为 key..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-03-18T04:29:56.000Z"}],["meta",{"property":"article:author","content":"CrabSAMA"}],["meta",{"property":"article:tag","content":"TypeScript"}],["meta",{"property":"article:modified_time","content":"2023-03-18T04:29:56.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"索引类型\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-03-18T04:29:56.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"CrabSAMA\\",\\"url\\":\\"https://crabsama.github.io/CrabSAMA-Blog\\"}]}"]]},"headers":[{"level":2,"title":"索引访问操作符","slug":"索引访问操作符","link":"#索引访问操作符","children":[]}],"git":{"createdTime":1679071923000,"updatedTime":1679113796000,"contributors":[{"name":"CrabSAMA","email":"71915282@qq.com","commits":2}]},"readingTime":{"minutes":1.09,"words":327},"filePathRelative":"TypeScript/index-types.md","localizedDate":"2023年3月17日","excerpt":"<blockquote>\\n<p>TypeScript 高级类型<a href=\\"https://www.tslang.cn/docs/handbook/advanced-types.html\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">官方文档</a></p>\\n</blockquote>\\n<h1>索引类型（Index types）</h1>\\n<p>在项目中时常有通过传入对象 <code>key</code> 值获取对象中其中一个值的需求，现在有一个想法，想通过动态传入的 <code>key</code> 值获取到对应的类型。在 <code>TypeScript</code> 中想要取得一个 <code>interface</code> 其中的一个属性，可以使用这种写法：</p>","autoDesc":true}');export{g as comp,b as data};
