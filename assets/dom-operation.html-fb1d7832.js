const e=JSON.parse('{"key":"v-43323b06","path":"/JavaScript/dom-operation.html","title":"DOM操作","lang":"zh-CN","frontmatter":{"title":"DOM操作","category":["前端开发"],"tag":["JavaScript","浏览器"],"description":"HTML文档被浏览器解析后是一颗DOM树，要改变HTML的结果，可以通过JavaScript来操作DOM。 DOM是一个属性结构，操作DOM就是这几个操作： 更新：更新该DOM节点的内容，相当于更新了该DOM节点表示的HTML的内容； 遍历：遍历该DOM节点下的子节点，以便进行进一步操作； 添加：在该DOM节点下新增一个子节点，相当于动态增加了一个HTML节点； 删除：将该节点从HTML中删除，相当于删掉了该DOM节点的内容以及它包含的所有子节点。 DOM获取 在操作一个DOM节点前，我们需要通过各种方式先拿到这个DOM节点。最常用的方法是document.getElementById()和document.getElementsByTagName()，以及CSS选择器document.getElementsByClassName()。","head":[["meta",{"property":"og:url","content":"https://crabsama.github.io/CrabSAMA-Blog/CrabSAMA-Blog/JavaScript/dom-operation.html"}],["meta",{"property":"og:site_name","content":"CrabSAMA · 笔记"}],["meta",{"property":"og:title","content":"DOM操作"}],["meta",{"property":"og:description","content":"HTML文档被浏览器解析后是一颗DOM树，要改变HTML的结果，可以通过JavaScript来操作DOM。 DOM是一个属性结构，操作DOM就是这几个操作： 更新：更新该DOM节点的内容，相当于更新了该DOM节点表示的HTML的内容； 遍历：遍历该DOM节点下的子节点，以便进行进一步操作； 添加：在该DOM节点下新增一个子节点，相当于动态增加了一个HTML节点； 删除：将该节点从HTML中删除，相当于删掉了该DOM节点的内容以及它包含的所有子节点。 DOM获取 在操作一个DOM节点前，我们需要通过各种方式先拿到这个DOM节点。最常用的方法是document.getElementById()和document.getElementsByTagName()，以及CSS选择器document.getElementsByClassName()。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-03-18T04:29:56.000Z"}],["meta",{"property":"article:tag","content":"JavaScript"}],["meta",{"property":"article:tag","content":"浏览器"}],["meta",{"property":"article:modified_time","content":"2023-03-18T04:29:56.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"DOM操作\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-03-18T04:29:56.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"DOM获取","slug":"dom获取","link":"#dom获取","children":[]},{"level":2,"title":"测试题","slug":"测试题","link":"#测试题","children":[]},{"level":2,"title":"更新DOM","slug":"更新dom","link":"#更新dom","children":[]},{"level":2,"title":"插入DOM","slug":"插入dom","link":"#插入dom","children":[{"level":3,"title":"insertBefore","slug":"insertbefore","link":"#insertbefore","children":[]}]},{"level":2,"title":"删除DOM","slug":"删除dom","link":"#删除dom","children":[]}],"git":{"createdTime":1679071923000,"updatedTime":1679113796000,"contributors":[{"name":"CrabSAMA","email":"71915282@qq.com","commits":2}]},"readingTime":{"minutes":8.36,"words":2508},"filePathRelative":"JavaScript/dom-operation.md","localizedDate":"2023年3月17日","excerpt":"<p>HTML文档被浏览器解析后是一颗DOM树，要改变HTML的结果，可以通过JavaScript来操作DOM。\\nDOM是一个属性结构，操作DOM就是这几个操作：</p>\\n<ul>\\n<li>更新：更新该DOM节点的内容，相当于更新了该DOM节点表示的HTML的内容；</li>\\n<li>遍历：遍历该DOM节点下的子节点，以便进行进一步操作；</li>\\n<li>添加：在该DOM节点下新增一个子节点，相当于动态增加了一个HTML节点；</li>\\n<li>删除：将该节点从HTML中删除，相当于删掉了该DOM节点的内容以及它包含的所有子节点。</li>\\n</ul>\\n<h2> DOM获取</h2>\\n<p>在操作一个DOM节点前，我们需要通过各种方式先拿到这个DOM节点。最常用的方法是<code>document.getElementById()</code>和<code>document.getElementsByTagName()</code>，以及CSS选择器<code>document.getElementsByClassName()</code>。</p>","autoDesc":true}');export{e as data};
