import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as d,o as c,c as a,a as o,b as e,d as n,e as i}from"./app-DMXpJ-m3.js";const l={},r=o("p",null,[e("由于 "),o("code",null,"husky"),e(" 这个插件在升级到 5.+ 的版本后有一个配置上的更新，因此需要对现有项目中的配置文件进行重新配置。如果现在有项目使用 4.x 版本想升级的也可以进行升级。")],-1),u={href:"https://typicode.github.io/husky/#/?id=migrate-from-v4-to-v7",target:"_blank",rel:"noopener noreferrer"},p=i(`<ol><li><p>升级<code>husky</code>版本（如果不需要可以跳过）</p><p>更改 package.json 里面的版本号为最新，然后<code>sudo lnpm install</code>即可。</p></li><li><p>初始化新版 <code>husky</code></p><p>新版 <code>husky</code> 需要有一个 <code>install</code> 的操作，安装新版后需要执行<code>husky install</code>命令，<strong>刚 <code>clone</code> 下来的项目也需要进行 <code>install</code> 操作</strong>，同理。</p></li><li><p>根据之前的配置文件重新配置</p><p>一般来说，现有项目的 <code>husky</code> 配置都在 <code>package.json</code> 中，可以看到有 <code>husky</code> 的相关配置，例如：</p></li></ol><div class="language-JSON line-numbers-mode" data-ext="JSON" data-title="JSON"><pre class="language-JSON"><code>// package.json
{
    ...
    &quot;husky&quot;: {
      &quot;hooks&quot;: {
        &quot;commit-msg&quot;: &quot;commitlint -E HUSKY_GIT_PARAMS&quot;,
        &quot;pre-commit&quot;: &quot;lint-staged&quot;
      }
    },
}
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>这里其实就是定义了两个 <code>hook</code>，在新版 <code>husky</code> 中定义 <code>hook</code> 的方式更改为了命令行，如果想要新增 <code>hook</code>，需要执行：</p><div class="language-Shell line-numbers-mode" data-ext="Shell" data-title="Shell"><pre class="language-Shell"><code>npx husky add .husky/pre-commit &quot;lint-staged&quot;
git add .husky/pre-commit
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,4),m=o("code",null,"husky",-1),h=o("code",null,"commit-msg",-1),k=o("code",null,"pre-commit",-1),g=o("code",null,"husky",-1),y=o("code",null,"HUSKY_GIT_PARAMS",-1),_={href:"https://typicode.github.io/husky/#/?id=husky_git_params-ie-commitlint-",target:"_blank",rel:"noopener noreferrer"},v=o("code",null,"commlint",-1),b=i(`<div class="language-Shell line-numbers-mode" data-ext="Shell" data-title="Shell"><pre class="language-Shell"><code>npx husky add .husky/commit-msg &quot;npx --no-install commitlint --edit $1&quot;
git add .husky/commit-msg
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>在上述配置完成后，就可以重试 <code>commit</code> 操作，看看是否 <code>husky</code> 是否正常运行啦！</strong></p>`,2);function A(S,x){const t=d("ExternalLinkIcon");return c(),a("div",null,[r,o("p",null,[e("附上"),o("a",u,[e("官方文档"),n(t)]),e("，有什么问题可以先自己看一下官方文档~")]),p,o("p",null,[e("以上面的配置为例，我们需要在新版 "),m,e(" 中添加两个钩子："),h,e(" 和 "),k,e("，那就执行两次上面的命令即可。但是在新版 "),g,e(" 中还有一些变化，一个比较重要的点就是 "),y,e(" 这个环境变量不在了，要使用 $1、$2 这种方式替代（"),o("a",_,[e("文档"),n(t)]),e("），因此添加 "),v,e(" 的命令应该是：")]),b])}const T=s(l,[["render",A],["__file","husky4-to-5.html.vue"]]),E=JSON.parse('{"path":"/%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/husky4-to-5.html","title":"Git Hook 插件——husky4.x升级到5.+指南","lang":"zh-CN","frontmatter":{"title":"Git Hook 插件——husky4.x升级到5.+指南","date":"2022-08-04T07:37:51.000Z","category":["解决方案"],"tag":["前端工程化"],"description":"由于 husky 这个插件在升级到 5.+ 的版本后有一个配置上的更新，因此需要对现有项目中的配置文件进行重新配置。如果现在有项目使用 4.x 版本想升级的也可以进行升级。 附上官方文档，有什么问题可以先自己看一下官方文档~ 升级husky版本（如果不需要可以跳过） 更改 package.json 里面的版本号为最新，然后sudo lnpm insta...","head":[["meta",{"property":"og:url","content":"https://crabsama.github.io/CrabSAMA-Blog/CrabSAMA-Blog/%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/husky4-to-5.html"}],["meta",{"property":"og:site_name","content":"CrabSAMA · 笔记"}],["meta",{"property":"og:title","content":"Git Hook 插件——husky4.x升级到5.+指南"}],["meta",{"property":"og:description","content":"由于 husky 这个插件在升级到 5.+ 的版本后有一个配置上的更新，因此需要对现有项目中的配置文件进行重新配置。如果现在有项目使用 4.x 版本想升级的也可以进行升级。 附上官方文档，有什么问题可以先自己看一下官方文档~ 升级husky版本（如果不需要可以跳过） 更改 package.json 里面的版本号为最新，然后sudo lnpm insta..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-08-05T09:14:26.000Z"}],["meta",{"property":"article:author","content":"CrabSAMA"}],["meta",{"property":"article:tag","content":"前端工程化"}],["meta",{"property":"article:published_time","content":"2022-08-04T07:37:51.000Z"}],["meta",{"property":"article:modified_time","content":"2024-08-05T09:14:26.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Git Hook 插件——husky4.x升级到5.+指南\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-08-04T07:37:51.000Z\\",\\"dateModified\\":\\"2024-08-05T09:14:26.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"CrabSAMA\\",\\"url\\":\\"https://crabsama.github.io/CrabSAMA-Blog\\"}]}"]]},"headers":[],"git":{"createdTime":1722507761000,"updatedTime":1722849266000,"contributors":[{"name":"CrabSAMA","email":"71915282@qq.com","commits":3}]},"readingTime":{"minutes":1.59,"words":476},"filePathRelative":"解决方案/husky4-to-5.md","localizedDate":"2022年8月4日","excerpt":"<p>由于 <code>husky</code> 这个插件在升级到 5.+ 的版本后有一个配置上的更新，因此需要对现有项目中的配置文件进行重新配置。如果现在有项目使用 4.x 版本想升级的也可以进行升级。</p>\\n<p>附上<a href=\\"https://typicode.github.io/husky/#/?id=migrate-from-v4-to-v7\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">官方文档</a>，有什么问题可以先自己看一下官方文档~</p>\\n<ol>\\n<li>\\n<p>升级<code>husky</code>版本（如果不需要可以跳过）</p>\\n<p>更改 package.json 里面的版本号为最新，然后<code>sudo lnpm install</code>即可。</p>\\n</li>\\n<li>\\n<p>初始化新版 <code>husky</code></p>\\n<p>新版 <code>husky</code> 需要有一个 <code>install</code> 的操作，安装新版后需要执行<code>husky install</code>命令，<strong>刚 <code>clone</code> 下来的项目也需要进行 <code>install</code> 操作</strong>，同理。</p>\\n</li>\\n<li>\\n<p>根据之前的配置文件重新配置</p>\\n<p>一般来说，现有项目的 <code>husky</code> 配置都在 <code>package.json</code> 中，可以看到有 <code>husky</code> 的相关配置，例如：</p>\\n</li>\\n</ol>","autoDesc":true}');export{T as comp,E as data};
