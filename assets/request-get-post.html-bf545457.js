import{_ as e,X as o,Y as c,a2 as d}from"./framework-43a12551.js";const t={},s=d('<h2 id="get-请求和-post-请求的区别" tabindex="-1"><a class="header-anchor" href="#get-请求和-post-请求的区别" aria-hidden="true">#</a> Get 请求和 Post 请求的区别</h2><ul><li><p>在浏览器进行回退操作时，<code>get</code> 请求是无害的，而 <code>post</code> 请求则会重新请求一次</p></li><li><p><code>get</code> 请求参数是连接在 <code>url</code> 后面的，而 <code>post</code> 请求参数是存放在 <code>request body</code> 内的</p></li><li><p><code>get</code> 请求因为浏览器对 <code>url</code> 长度有限制（不同浏览器长度限制不一样），所以对传参数量有限制；而 <code>post</code> 请求因为参数存放在 request body 内，所以参数数量没有限制。（事实上，<code>get</code> 请求也能在 <code>request body</code> 携带参数，只是不符合规定，有的浏览器能够获取到数据，而有的不能）</p></li><li><p>因为 <code>get</code> 请求参数暴露在 <code>url</code> 上，所以安全方面 <code>post</code> 比 <code>get</code> 更加安全</p></li><li><p><code>get</code> 请求浏览器会主动 <code>cache</code>，除非主动设置否则 <code>post</code> 并不会</p></li><li><p><code>get</code> 请求只能进行 <code>url</code> 编码，而 <code>post</code> 请求可以支持多种编码方式</p></li><li><p><code>get</code> 请求产生一个 <code>tcp</code> 数据包，<code>post</code> 请求产生两个 <code>tcp</code> 数据包</p><p>浏览器在发送 <code>get</code> 请求时会将 <code>header</code> 和 <code>data</code> 一起发送给服务器，服务器返回 <code>200</code> 状态码；而在发送 <code>post</code> 请求时，会先将 <code>header</code> 发送给服务器，服务器返回 <code>100</code>，之后再将 <code>data</code> 发送给服务器，服务器返回 <code>200 OK</code>。</p></li></ul>',2),p=[s];function l(r,a){return o(),c("div",null,p)}const u=e(t,[["render",l],["__file","request-get-post.html.vue"]]);export{u as default};
