import{_ as t,W as e,X as p,Y as n,Z as o,a0 as c,a1 as a,C as l}from"./framework-474f8844.js";const i={},u=a('<h2 id="window——不但充当全局作用域-而且表示浏览器窗口" tabindex="-1"><a class="header-anchor" href="#window——不但充当全局作用域-而且表示浏览器窗口" aria-hidden="true">#</a> window——不但充当全局作用域，而且表示浏览器窗口</h2><p><code>innerWidth / innerHeight</code><br> 获取浏览器窗口内部宽高。<br> 内部宽高是指除去菜单栏、工具栏、边框等占位元素后，用于<strong>显示网页</strong>的净宽高。</p><p><code>outerWidth / outerHeight</code><br> 获取浏览器窗口的整个宽高。</p><hr><h2 id="navigator——表示浏览器的信息" tabindex="-1"><a class="header-anchor" href="#navigator——表示浏览器的信息" aria-hidden="true">#</a> navigator——表示浏览器的信息</h2><p>常见属性：</p><ul><li>navigator.appName：浏览器名称；</li><li>navigator.appVersion：浏览器版本；</li><li>navigator.language：浏览器设置的语言；</li><li>navigator.platform：操作系统类型；</li><li>navigator.userAgent：浏览器设定的<code>User-Agent</code>字符串。</li></ul><p><em>请注意</em>，<code>navigator</code>的信息可以很容易地被用户修改，所以JavaScript读取的值不一定是正确的。</p><hr><h2 id="screen——表示屏幕的信息" tabindex="-1"><a class="header-anchor" href="#screen——表示屏幕的信息" aria-hidden="true">#</a> screen——表示屏幕的信息</h2><p>常见属性：</p><ul><li>screen.width：屏幕宽度，以像素为单位；</li><li>screen.height：屏幕高度，以像素为单位；</li><li>screen.colorDepth：返回颜色位数，如8、16、24。</li></ul><h2 id="location——表示当前页面的url信息" tabindex="-1"><a class="header-anchor" href="#location——表示当前页面的url信息" aria-hidden="true">#</a> location——表示当前页面的URL信息</h2>',13),d={href:"http://www.example.com:8080/path/index.html?a=1&b=2#TOP",target:"_blank",rel:"noopener noreferrer"},r=a(`<p>可以用<code>location.href</code>获取。<br> 其余属性可以通过以下方式获取：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>location<span class="token punctuation">.</span>protocol<span class="token punctuation">;</span> <span class="token comment">// &#39;http&#39;</span>
location<span class="token punctuation">.</span>host<span class="token punctuation">;</span> <span class="token comment">// &#39;www.example.com&#39;</span>
location<span class="token punctuation">.</span>port<span class="token punctuation">;</span> <span class="token comment">// &#39;8080&#39;</span>
location<span class="token punctuation">.</span>pathname<span class="token punctuation">;</span> <span class="token comment">// &#39;/path/index.html&#39;</span>
location<span class="token punctuation">.</span>search<span class="token punctuation">;</span> <span class="token comment">// &#39;?a=1&amp;b=2&#39; ?后的部分（包括?） 查询字符串</span>
location<span class="token punctuation">.</span>hash<span class="token punctuation">;</span> <span class="token comment">// &#39;TOP&#39; #后的部门 锚点</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h2 id="document——表示当前页面" tabindex="-1"><a class="header-anchor" href="#document——表示当前页面" aria-hidden="true">#</a> document——表示当前页面</h2><p>由于HTML在浏览器中以DOM形式表示为树形结构，<code>document</code>对象就是整个DOM树的根节点。要查找DOM树的某个节点，需要从<code>document</code>对象开始查找。最常用的查找是根据ID和Tag Name。</p><div class="language-html line-numbers-mode" data-ext="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dl</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>drink-menu<span class="token punctuation">&quot;</span></span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">border</span><span class="token punctuation">:</span>solid 1px #ccc<span class="token punctuation">;</span><span class="token property">padding</span><span class="token punctuation">:</span>6px<span class="token punctuation">;</span></span><span class="token punctuation">&quot;</span></span></span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dt</span><span class="token punctuation">&gt;</span></span>摩卡<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dt</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dd</span><span class="token punctuation">&gt;</span></span>热摩卡咖啡<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dd</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dt</span><span class="token punctuation">&gt;</span></span>酸奶<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dt</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dd</span><span class="token punctuation">&gt;</span></span>北京老酸奶<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dd</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dt</span><span class="token punctuation">&gt;</span></span>果汁<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dt</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dd</span><span class="token punctuation">&gt;</span></span>鲜榨苹果汁<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dd</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dl</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>getElementById()</code>——通过标签ID获取DOM</p><p><code>getElementsByTagName()</code>——通过标签名获取DOM</p><p><code>getElementsByClassName()</code>——通过标签Class获取DOM</p><p><code>document</code>对象还有一个<code>cookie</code>属性</p><p>JavaScript可以通过<code>document.cookie</code>读取到当前页面的Cookie：（以键值对name=value格式存储 ;作为分隔）</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code>document<span class="token punctuation">.</span>cookie<span class="token punctuation">;</span> <span class="token comment">// &#39;v=123; remember=true; prefer=zh&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>服务器在设置Cookie时可以使用<code>httpOnly</code>，设定了<code>httpOnly</code>的Cookie将不能被JavaScript读取。这个行为由浏览器实现，主流浏览器均支持<code>httpOnly</code>选项，IE从IE6 SP1开始支持。</p><p>为了确保安全，服务器端在设置Cookie时，应该始终坚持使用<code>httpOnly</code>。</p>`,14);function k(m,g){const s=l("ExternalLinkIcon");return e(),p("div",null,[u,n("p",null,[n("a",d,[o("http://www.example.com:8080/path/index.html?a=1&b=2#TOP"),c(s)])]),r])}const v=t(i,[["render",k],["__file","browser-object.html.vue"]]);export{v as default};
