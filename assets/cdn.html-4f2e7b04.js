import{_ as e,W as c,X as o,a1 as i}from"./framework-474f8844.js";const t="/assets/image-20220527182211038-11ff8193.png",a="/assets/image-20220527182227107-f872bde5.png",d={},n=i('<p><code>Content Delivery Network</code>，即内容分发网络，通过各地部署的多套 <code>cache</code> 的静态镜像服务节点，通过空间来换取时间。用户向源站域名发起请求时，请求会被调度至最接近用户的服务节点，直接由服务节点直接快速响应，有效降低用户访问延迟，提升可用性。</p><p>未使用 <code>CDN</code>：</p><figure><img src="'+t+'" alt="image-20220527182211038" tabindex="0" loading="lazy"><figcaption>image-20220527182211038</figcaption></figure><p>使用了 <code>CDN</code>：</p><figure><img src="'+a+'" alt="image-20220527182227107" tabindex="0" loading="lazy"><figcaption>image-20220527182227107</figcaption></figure><p>使用 <code>CDN</code> 访问：用户发送请求 -&gt; 智能 <code>DNS</code> 的解析（根据 IP 判断地理位置、接入网类型、选择路由最短和负载最轻的服务器） -&gt; 取得缓存服务器 IP -&gt; 把内容返回给用户（如果缓存中有） -&gt; 向目标站发起请求 -&gt; 将结果返回给用户 -&gt; 将结果存入缓存服务器</p><p>优势：</p><ul><li>本地 <code>Cache</code> 加速</li><li>跨运营商的网络加速，保证不同网络的用户都能得到良好的访问质量</li><li>远程访问用户根据 <code>DNS</code> 负载均衡技术智能自动选择 <code>Cache</code> 服务器</li><li>自动生成服务器的远程Mirror（镜像）cache服务器，远程用户访问时从 cache 服务器上读取数据，减少远程访问的带宽、分担网络流量、减轻原站点 web 服务器负载等功能</li><li>广泛分布的 <code>CDN</code> 节点加上节点之间的智能冗余机制，可以有效地防止黑客入侵</li></ul>',8),l=[n];function g(s,r){return c(),o("div",null,l)}const _=e(d,[["render",g],["__file","cdn.html.vue"]]);export{_ as default};
