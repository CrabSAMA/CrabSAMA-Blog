import{_ as e,W as o,X as t,a1 as c}from"./framework-474f8844.js";const i={},n=c('<p>多人协作的工作模式通常是这样：</p><ol><li>首先，可以试图用<code>git push origin &lt;branch-name&gt;</code>推送自己的修改；</li><li>如果推送失败，则因为远程分支比你的本地更新，需要先用<code>git pull</code>试图合并；</li><li>如果合并有冲突，则解决冲突，并在本地提交；</li><li>没有冲突或者解决掉冲突后，再用<code>git push origin &lt;branch-name&gt;</code>推送就能成功！ 如果<code>git pull</code>提示<code>no tracking information</code>，则说明本地分支和远程分支的链接关系没有创建，用命令<code>git branch --set-upstream-to &lt;branch-name&gt; origin/&lt;branch-name&gt;</code>。</li></ol><p>这就是多人协作的工作模式，一旦熟悉了，就非常简单。</p><h2 id="个人做法-大学时期" tabindex="-1"><a class="header-anchor" href="#个人做法-大学时期" aria-hidden="true">#</a> 个人做法（大学时期）</h2><p>一般我会先<code>commit</code>自己的代码，将代码放进暂存区，保证安全；</p><p>然后<code>git pull</code>获取最新的代码，如果有冲突则进行合并；</p><p>最后进行<code>git push origin &lt;branch-name&gt;</code>，将代码推送到远程分支。</p>',7),a=[n];function l(r,d){return o(),t("div",null,a)}const p=e(i,[["render",l],["__file","multi-person-collaboration.html.vue"]]);export{p as default};
