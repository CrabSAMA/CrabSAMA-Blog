import{_ as n,W as s,X as a,a1 as t}from"./framework-474f8844.js";const p={},e=t(`<ul><li>husky：工程化的根基，可以在进行 git 操作的时候，对 git 提供的一系列钩子进行<strong>拦截并执行</strong>相应的操作。例如对代码进行校验等。</li><li>commitlint：代码的提交规范检验。可以对代码的 <strong>commit 内容进行校验</strong>，确保团队中的 commit 保持规范化，方便团队协作和快速定位问题。</li><li>Lint-staged：前端文件过滤工具。代码的格式化工具肯定会涉及到文件系统，一般工具会先读取文件，格式化操作后重新写入。这个工具可以将 git 代码暂存区文件过滤出来，仅仅对<strong>被</strong> <strong>committed 的文件</strong>进行处理。</li><li>eslint：代码校验工具。eslint 不多介绍了，规范代码格式的工具，保证代码不出现一些低级错误。</li><li>prettier：代码格式化工具。eslint 仅对代码中有问题的地方进行修改，不改动代码风格。而 prettier 是一款代码格式化工具，可以保证团队的<strong>代码风格</strong>一致。</li><li>stylelint：代码校验工具。eslint 是 js 代码的格式规范工具，那 stylelint 则是 css 代码的格式规范工具，引入 stylelint 可以规范 css 代码的格式。</li></ul><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token comment">// package.json——husky、lint-staged 配置</span>
<span class="token property">&quot;husky&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
  <span class="token property">&quot;hooks&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token comment">// commit-msg，对提交信息进行校验</span>
    <span class="token property">&quot;commit-msg&quot;</span><span class="token operator">:</span> <span class="token string">&quot;commitlint -E HUSKY_GIT_PARAMS&quot;</span><span class="token punctuation">,</span>
    <span class="token property">&quot;pre-commit&quot;</span><span class="token operator">:</span> <span class="token string">&quot;lint-staged&quot;</span>  <span class="token comment">// pre-commit，提交前的钩子</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token property">&quot;lint-staged&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
  <span class="token comment">// 此处可以配置文件夹和文件类型的范围</span>
  <span class="token property">&quot;src/**/*.{js,vue}&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token string">&quot;eslint --fix&quot;</span><span class="token punctuation">,</span>  <span class="token comment">// 先使用 eslint 进行 js 规范化修复</span>
    <span class="token string">&quot;git add&quot;</span>  <span class="token comment">// 通过的话执行 git 将规范后的代码 add</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token property">&quot;src/**/*.{html,vue,css,sass,scss}&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token string">&quot;stylelint --fix&quot;</span><span class="token punctuation">,</span>  <span class="token comment">// 使用 stylelint 进行 css 规范化修复</span>
    <span class="token string">&quot;git add&quot;</span>
  <span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token comment">// webpack.config.js——stylelint配置</span>
<span class="token keyword">const</span> StyleLintPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;stylelint-webpack-plugin&#39;</span><span class="token punctuation">)</span>
module<span class="token punctuation">.</span><span class="token function-variable function">exports</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">env</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token operator">...</span>
  <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span>
    <span class="token keyword">new</span> <span class="token class-name">StyleLintPlugin</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
      <span class="token literal-property property">files</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;src/**/*.{html,vue,css,sass,scss}&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
      <span class="token literal-property property">fix</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment">// 自动修复所有文件，旧项目不建议打开，新项目可以</span>
      <span class="token literal-property property">cache</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
      <span class="token literal-property property">emitErrors</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
      <span class="token literal-property property">failOnError</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
      <span class="token literal-property property">quiet</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span> <span class="token comment">// 让控制台不显示报错</span>
      <span class="token literal-property property">lintDirtyModulesOnly</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token comment">// 只对新增的做校验 Lint only changed files, skip lint on start.</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span>
  <span class="token punctuation">]</span>
  <span class="token operator">...</span>
<span class="token punctuation">}</span>

<span class="token comment">// commitlint.config.js——commitlint 配置</span>
module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
	<span class="token keyword">extends</span><span class="token operator">:</span> <span class="token punctuation">[</span>
		<span class="token string">&quot;@commitlint/config-conventional&quot;</span>
	<span class="token punctuation">]</span><span class="token punctuation">,</span>
	<span class="token literal-property property">rules</span><span class="token operator">:</span> <span class="token punctuation">{</span>
		<span class="token string-property property">&#39;type-enum&#39;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token string">&#39;always&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>
			<span class="token string">&#39;upd&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;feat&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;fix&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;refactor&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;docs&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;chore&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;style&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;revert&#39;</span>
		<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
		<span class="token string-property property">&#39;type-case&#39;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
		<span class="token string-property property">&#39;type-empty&#39;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
		<span class="token string-property property">&#39;scope-empty&#39;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
		<span class="token string-property property">&#39;scope-case&#39;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
		<span class="token string-property property">&#39;subject-full-stop&#39;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">&#39;never&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
		<span class="token string-property property">&#39;subject-case&#39;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">&#39;never&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
		<span class="token string-property property">&#39;header-max-length&#39;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token string">&#39;always&#39;</span><span class="token punctuation">,</span> <span class="token number">72</span><span class="token punctuation">]</span>
	<span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// stylelint.config.js——stylelint 配置</span>
module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token comment">// 此文件更改后, 需npm run dev 才能生效</span>
  <span class="token literal-property property">defaultSeverity</span><span class="token operator">:</span> <span class="token string">&#39;error&#39;</span><span class="token punctuation">,</span>
  <span class="token keyword">extends</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;stylelint-config-standard&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment">// 使用标准规则</span>
  <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;stylelint-scss&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
  <span class="token literal-property property">rules</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token comment">// 规则地址：https://stylelint.docschina.org/user-guide/rules/</span>
    <span class="token string-property property">&#39;rule-empty-line-before&#39;</span><span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token comment">// 必须要有空行, 关闭</span>
    <span class="token string-property property">&#39;at-rule-no-unknown&#39;</span><span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token comment">// 某些语法识别不了, 比如 for循环</span>
    <span class="token string-property property">&#39;number-leading-zero&#39;</span><span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token comment">// .1 和 0.1 同时支持</span>
    <span class="token string-property property">&#39;no-descending-specificity&#39;</span><span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token comment">// 禁止在具有较高优先级的选择器后出现被其覆盖的较低优先级的选择器</span>
    <span class="token string-property property">&#39;declaration-block-trailing-semicolon&#39;</span><span class="token operator">:</span> <span class="token keyword">null</span><span class="token punctuation">,</span> <span class="token comment">// 要求或禁止声明块的一个尾随分号（可自动修复）</span>
    <span class="token string-property property">&#39;font-family-no-missing-generic-family-keyword&#39;</span><span class="token operator">:</span> <span class="token keyword">null</span> <span class="token comment">// 关闭: 禁止在字体族名称列表中缺少通用字体族关键字。</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// .stylelintignore——stylelint 配置</span>
node_modules
dist
www
lib
<span class="token punctuation">.</span>idea
<span class="token punctuation">.</span>vscode
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3),o=[e];function l(c,i){return s(),a("div",null,o)}const u=n(p,[["render",l],["__file","团队代码格式化.html.vue"]]);export{u as default};
