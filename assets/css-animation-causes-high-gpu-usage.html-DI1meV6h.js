import{_ as o}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as i,o as p,c,a as n,b as a,d as e,e as t}from"./app-DMXpJ-m3.js";const l="/CrabSAMA-Blog/assets/image-20221202141652806-DksH2eoW.png",r={},u=t('<h2 id="背景" tabindex="-1"><a class="header-anchor" href="#背景"><span>背景</span></a></h2><figure><img src="'+l+`" alt="image-20221202141652806" tabindex="0" loading="lazy"><figcaption>image-20221202141652806</figcaption></figure><p>有同学反映「权限申请」按钮的动画效果会导致 GPU 占用高的问题，在我的 m1 macbook pro 13 上表现为占用 20~25%，但是那位同学说在他电脑上占用率高达 130%，因此想搞明白为什么 animation 会导致 GPU 占用如此高。</p><div class="language-less line-numbers-mode" data-ext="less" data-title="less"><pre class="language-less"><code><span class="token atrule">@keyframes flowlight</span> <span class="token punctuation">{</span>
  <span class="token comment">// 0% {</span>
  <span class="token comment">//   background-position: 0 0;</span>
  <span class="token comment">// }</span>
  <span class="token selector">100%</span> <span class="token punctuation">{</span>
    <span class="token property">background-position</span><span class="token punctuation">:</span> <span class="token operator">-</span>400% 0<span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token comment">// 按钮的类名</span>
<span class="token selector">.permission-url</span> <span class="token punctuation">{</span>
  <span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token function">linear-gradient</span><span class="token punctuation">(</span>
    <span class="token operator">-</span>89deg<span class="token punctuation">,</span>
    #fcab9b<span class="token punctuation">,</span>
    #f1d3af<span class="token punctuation">,</span>
    #afc9f1<span class="token punctuation">,</span>
    #bb9cfc<span class="token punctuation">,</span>
    #fcab9b
  <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token property">background-size</span><span class="token punctuation">:</span> 400%<span class="token punctuation">;</span>
  <span class="token property">animation</span><span class="token punctuation">:</span> flowlight 3.5s linear infinite<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="思路" tabindex="-1"><a class="header-anchor" href="#思路"><span>思路</span></a></h2><h3 id="高性能动画" tabindex="-1"><a class="header-anchor" href="#高性能动画"><span>高性能动画</span></a></h3>`,6),d=n("code",null,"css animation background gpu",-1),m={href:"https://web.dev/animations-guide/#triggers",target:"_blank",rel:"noopener noreferrer"},g=n("h3",{id:"重绘和回流",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#重绘和回流"},[n("span",null,"重绘和回流")])],-1),k=n("p",null,"在最初学习前端的时候，我们就会了解到涉及 DOM 的两种行为：重绘（repaint）和回流（reflow）。回流总会引发重绘，而重绘不一定导致回流，因此很明显重绘的开销是比回流少的。就是这一个「少」字，我们往往认为尽力避免回流即可，重绘的开销一般可以忽略不计。但事实真的如此吗？",-1),h={href:"https://csstriggers.com/",target:"_blank",rel:"noopener noreferrer"},b=n("code",null,"background-position",-1),v=t('<blockquote><h2 id="background-position" tabindex="-1"><a class="header-anchor" href="#background-position"><span>background-position</span></a></h2><p>Changing <code>background-position</code> does not trigger any geometry changes, which is good. But since it is a visual property, it will cause <strong>painting</strong> to occur. Painting is typically a super expensive operation, so you should be cautious.</p><p>Once any pixels have been painted the page will be <strong>composited</strong> together.</p></blockquote><p>意思是这个属性不会触发回流，但是由于是一个视觉属性，所以会触发重绘，<strong>重绘也是一项昂贵的操作</strong>，所以我们应该注意。</p><p>这还是我第一次知道，重绘其实也是一项高开销的操作，而动画会定期改变属性，导致不断触发重绘，最终就会表现为 GPU 占用高。</p><h2 id="解决方案" tabindex="-1"><a class="header-anchor" href="#解决方案"><span>解决方案</span></a></h2><p>TODO...</p>',5);function f(_,y){const s=i("ExternalLinkIcon");return p(),c("div",null,[u,n("p",null,[a("拿着 "),d,a(" 的关键词去 google 上搜会有很多结果，在其中我看到了一个如何实现高性能 CSS 动画的文章（"),n("a",m,[a("链接"),e(s)]),a("）。在里面提到了要避免属性变更导致的重绘和回流，因此问题的思路就转变到我们动画变更的属性上了。")]),g,k,n("p",null,[a("要了解重绘和回流，我们首先要知道具体哪些 css 属性的变动会引发重绘和回流。有一个网站里面列出了常见的属性触发后的行为（"),n("a",h,[a("链接"),e(s)]),a("），由于代码里面用到了 "),b,a(" 属性，我们就直接看看这个属性会触发什么：")]),v])}const C=o(r,[["render",f],["__file","css-animation-causes-high-gpu-usage.html.vue"]]),P=JSON.parse('{"path":"/%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/css-animation-causes-high-gpu-usage.html","title":"css 动画导致 gpu 占用高","lang":"zh-CN","frontmatter":{"title":"css 动画导致 gpu 占用高","date":"2022-12-02T08:15:00.000Z","category":["解决方案"],"tag":["css","性能优化"],"description":"背景 image-20221202141652806image-20221202141652806 有同学反映「权限申请」按钮的动画效果会导致 GPU 占用高的问题，在我的 m1 macbook pro 13 上表现为占用 20~25%，但是那位同学说在他电脑上占用率高达 130%，因此想搞明白为什么 animation 会导致 GPU 占用如此高。 ...","head":[["meta",{"property":"og:url","content":"https://crabsama.github.io/CrabSAMA-Blog/CrabSAMA-Blog/%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/css-animation-causes-high-gpu-usage.html"}],["meta",{"property":"og:site_name","content":"CrabSAMA · 笔记"}],["meta",{"property":"og:title","content":"css 动画导致 gpu 占用高"}],["meta",{"property":"og:description","content":"背景 image-20221202141652806image-20221202141652806 有同学反映「权限申请」按钮的动画效果会导致 GPU 占用高的问题，在我的 m1 macbook pro 13 上表现为占用 20~25%，但是那位同学说在他电脑上占用率高达 130%，因此想搞明白为什么 animation 会导致 GPU 占用如此高。 ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-08-05T09:14:26.000Z"}],["meta",{"property":"article:author","content":"CrabSAMA"}],["meta",{"property":"article:tag","content":"css"}],["meta",{"property":"article:tag","content":"性能优化"}],["meta",{"property":"article:published_time","content":"2022-12-02T08:15:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-08-05T09:14:26.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"css 动画导致 gpu 占用高\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2022-12-02T08:15:00.000Z\\",\\"dateModified\\":\\"2024-08-05T09:14:26.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"CrabSAMA\\",\\"url\\":\\"https://crabsama.github.io/CrabSAMA-Blog\\"}]}"]]},"headers":[{"level":2,"title":"背景","slug":"背景","link":"#背景","children":[]},{"level":2,"title":"思路","slug":"思路","link":"#思路","children":[{"level":3,"title":"高性能动画","slug":"高性能动画","link":"#高性能动画","children":[]},{"level":3,"title":"重绘和回流","slug":"重绘和回流","link":"#重绘和回流","children":[]}]},{"level":2,"title":"解决方案","slug":"解决方案","link":"#解决方案","children":[]}],"git":{"createdTime":1722507761000,"updatedTime":1722849266000,"contributors":[{"name":"CrabSAMA","email":"71915282@qq.com","commits":3}]},"readingTime":{"minutes":2.04,"words":612},"filePathRelative":"解决方案/css-animation-causes-high-gpu-usage.md","localizedDate":"2022年12月2日","excerpt":"<h2>背景</h2>\\n<figure><figcaption>image-20221202141652806</figcaption></figure>\\n<p>有同学反映「权限申请」按钮的动画效果会导致 GPU 占用高的问题，在我的 m1 macbook pro 13 上表现为占用 20~25%，但是那位同学说在他电脑上占用率高达 130%，因此想搞明白为什么 animation 会导致 GPU 占用如此高。</p>\\n<div class=\\"language-less\\" data-ext=\\"less\\" data-title=\\"less\\"><pre class=\\"language-less\\"><code><span class=\\"token atrule\\">@keyframes flowlight</span> <span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token comment\\">// 0% {</span>\\n  <span class=\\"token comment\\">//   background-position: 0 0;</span>\\n  <span class=\\"token comment\\">// }</span>\\n  <span class=\\"token selector\\">100%</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token property\\">background-position</span><span class=\\"token punctuation\\">:</span> <span class=\\"token operator\\">-</span>400% 0<span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span>\\n\\n<span class=\\"token comment\\">// 按钮的类名</span>\\n<span class=\\"token selector\\">.permission-url</span> <span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token property\\">background-image</span><span class=\\"token punctuation\\">:</span> <span class=\\"token function\\">linear-gradient</span><span class=\\"token punctuation\\">(</span>\\n    <span class=\\"token operator\\">-</span>89deg<span class=\\"token punctuation\\">,</span>\\n    #fcab9b<span class=\\"token punctuation\\">,</span>\\n    #f1d3af<span class=\\"token punctuation\\">,</span>\\n    #afc9f1<span class=\\"token punctuation\\">,</span>\\n    #bb9cfc<span class=\\"token punctuation\\">,</span>\\n    #fcab9b\\n  <span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token property\\">background-size</span><span class=\\"token punctuation\\">:</span> 400%<span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token property\\">animation</span><span class=\\"token punctuation\\">:</span> flowlight 3.5s linear infinite<span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre></div>","autoDesc":true}');export{C as comp,P as data};
