import{_ as a,X as t,Y as o,Z as n,$ as p,a1 as e,a2 as c,C as l}from"./framework-43a12551.js";const i="/CrabSAMA-Blog/assets/prototype-78ac6c61.png",u={},r=n("p",null,"帮你彻底搞懂JS中的PROTOTYPE、__PROTO__与CONSTRUCTOR（图解）",-1),k={href:"https://blog.csdn.net/cc18868876837/article/details/81211729",target:"_blank",rel:"noopener noreferrer"},d=c(`<ol><li>我们需要牢记两点：①_proto_和_constructor_属性是<strong>对象</strong>所独有的；② _prototype_属性是<strong>函数</strong>所独有的，因为函数也是一种对象，所以函数也拥有_proto_和_constructor_属性。</li><li>_proto_属性的作用就是当访问一个对象的属性时，如果该对象内部不存在这个属性，那么就会去它的_proto_属性所指向的那个对象（父对象）里找，一直找，直到_proto_属性的终点null，再往上找就相当于在null上取值，会报错。通过_proto_属性将对象连接起来的这条链路即我们所谓的<strong>原型链</strong>。</li><li>_prototype_属性的作用就是让该<strong>函数所实例化的对象</strong>们都可以找到<strong>公用的属性和方法</strong>，即f1.<em>proto</em> === Foo.<em>prototype</em>。</li><li>_constructor_属性的含义就是指向<strong>该对象的构造函数</strong>，所有函数（此时看成对象了）最终的构造函数都指向Function。</li></ol><figure><img src="https://img-blog.csdnimg.cn/20190311194017886.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2NjMTg4Njg4NzY4Mzc=,size_16,color_FFFFFF,t_70#pic_center" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p style="text-align:center;">原型链解释图</p><hr><h2 id="方便理解的代码" tabindex="-1"><a class="header-anchor" href="#方便理解的代码" aria-hidden="true">#</a> 方便理解的代码</h2><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">Person</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
	<span class="token keyword">this</span><span class="token punctuation">.</span>name<span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token class-name">Person</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span><span class="token function-variable function">say</span><span class="token operator">=</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;hello&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>

<span class="token keyword">var</span> person<span class="token operator">=</span><span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 指向 Function 的 prototype</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Person<span class="token punctuation">.</span>\\_\\_proto\\_\\_<span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token class-name">Function</span><span class="token punctuation">.</span>prototype<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// Person.prototype.\\_\\_proto\\_\\_ 指向 Object.prototype</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token class-name">Person</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>\\_\\_proto\\_\\_<span class="token punctuation">)</span><span class="token punctuation">;</span>  
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token class-name">Object</span><span class="token punctuation">.</span>prototype<span class="token punctuation">)</span><span class="token punctuation">;</span>

console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>person<span class="token punctuation">.</span>\\_\\_proto\\_\\_<span class="token punctuation">)</span><span class="token punctuation">;</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token class-name">Person</span><span class="token punctuation">.</span>prototype<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// constructor 从对象指向一个函数 即自身的构造函数</span>
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token class-name">Person</span><span class="token punctuation">.</span>prototype<span class="token punctuation">.</span>constructor<span class="token punctuation">)</span><span class="token punctuation">;</span>  
console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>Person<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="`+i+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p style="text-align:center;">运行结果</p>',8);function _(m,v){const s=l("ExternalLinkIcon");return t(),o("div",null,[n("blockquote",null,[r,n("p",null,[n("a",k,[p("CSDN链接"),e(s)])])]),d])}const b=a(u,[["render",_],["__file","prototype.html.vue"]]);export{b as default};
